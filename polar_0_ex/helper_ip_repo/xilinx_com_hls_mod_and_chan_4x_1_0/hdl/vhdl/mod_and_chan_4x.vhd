-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.1
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity mod_and_chan_4x is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst_n : IN STD_LOGIC;
    ctrl_in_V_TDATA : IN STD_LOGIC_VECTOR (63 downto 0);
    ctrl_in_V_TVALID : IN STD_LOGIC;
    ctrl_in_V_TREADY : OUT STD_LOGIC;
    ctrl_out_V_TDATA : OUT STD_LOGIC_VECTOR (63 downto 0);
    ctrl_out_V_TVALID : OUT STD_LOGIC;
    ctrl_out_V_TREADY : IN STD_LOGIC;
    hard_data_V_V_TDATA : IN STD_LOGIC_VECTOR (95 downto 0);
    hard_data_V_V_TVALID : IN STD_LOGIC;
    hard_data_V_V_TREADY : OUT STD_LOGIC;
    chan_data_1_V_TDATA : OUT STD_LOGIC_VECTOR (39 downto 0);
    chan_data_1_V_TVALID : OUT STD_LOGIC;
    chan_data_1_V_TREADY : IN STD_LOGIC;
    chan_data_2_V_TDATA : OUT STD_LOGIC_VECTOR (39 downto 0);
    chan_data_2_V_TVALID : OUT STD_LOGIC;
    chan_data_2_V_TREADY : IN STD_LOGIC;
    chan_data_3_V_TDATA : OUT STD_LOGIC_VECTOR (39 downto 0);
    chan_data_3_V_TVALID : OUT STD_LOGIC;
    chan_data_3_V_TREADY : IN STD_LOGIC;
    chan_data_4_V_TDATA : OUT STD_LOGIC_VECTOR (39 downto 0);
    chan_data_4_V_TVALID : OUT STD_LOGIC;
    chan_data_4_V_TREADY : IN STD_LOGIC );
end;


architecture behav of mod_and_chan_4x is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "mod_and_chan_4x,hls_ip_2018_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xczu9eg-ffvb1156-2L-e,HLS_INPUT_CLOCK=2.500000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=2.189000,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=76,HLS_SYN_DSP=64,HLS_SYN_FF=15185,HLS_SYN_LUT=18099}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (5 downto 0) := "000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (5 downto 0) := "000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (5 downto 0) := "001000";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (5 downto 0) := "010000";
    constant ap_ST_fsm_state23 : STD_LOGIC_VECTOR (5 downto 0) := "100000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv32_27 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100111";
    constant ap_const_lv32_34 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110100";
    constant ap_const_lv17_1CFD5 : STD_LOGIC_VECTOR (16 downto 0) := "11100111111010101";
    constant ap_const_lv17_302B : STD_LOGIC_VECTOR (16 downto 0) := "00011000000101011";
    constant ap_const_lv17_19FAB : STD_LOGIC_VECTOR (16 downto 0) := "11001111110101011";
    constant ap_const_lv17_16F81 : STD_LOGIC_VECTOR (16 downto 0) := "10110111110000001";
    constant ap_const_lv17_0 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000000000";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv6_4 : STD_LOGIC_VECTOR (5 downto 0) := "000100";
    constant ap_const_lv6_8 : STD_LOGIC_VECTOR (5 downto 0) := "001000";
    constant ap_const_lv6_C : STD_LOGIC_VECTOR (5 downto 0) := "001100";
    constant ap_const_lv6_18 : STD_LOGIC_VECTOR (5 downto 0) := "011000";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv8_FF : STD_LOGIC_VECTOR (7 downto 0) := "11111111";
    constant ap_const_lv7_60 : STD_LOGIC_VECTOR (6 downto 0) := "1100000";
    constant ap_const_lv3_3 : STD_LOGIC_VECTOR (2 downto 0) := "011";
    constant ap_const_lv3_2 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv14_0 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000000";
    constant ap_const_lv14_3FFF : STD_LOGIC_VECTOR (13 downto 0) := "11111111111111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv16_D2BE : STD_LOGIC_VECTOR (15 downto 0) := "1101001010111110";
    constant ap_const_lv16_2D41 : STD_LOGIC_VECTOR (15 downto 0) := "0010110101000001";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";

    signal ap_rst_n_inv : STD_LOGIC;
    signal ctrl_in_V_0_data_out : STD_LOGIC_VECTOR (63 downto 0);
    signal ctrl_in_V_0_vld_in : STD_LOGIC;
    signal ctrl_in_V_0_vld_out : STD_LOGIC;
    signal ctrl_in_V_0_ack_in : STD_LOGIC;
    signal ctrl_in_V_0_ack_out : STD_LOGIC;
    signal ctrl_in_V_0_payload_A : STD_LOGIC_VECTOR (63 downto 0);
    signal ctrl_in_V_0_payload_B : STD_LOGIC_VECTOR (63 downto 0);
    signal ctrl_in_V_0_sel_rd : STD_LOGIC := '0';
    signal ctrl_in_V_0_sel_wr : STD_LOGIC := '0';
    signal ctrl_in_V_0_sel : STD_LOGIC;
    signal ctrl_in_V_0_load_A : STD_LOGIC;
    signal ctrl_in_V_0_load_B : STD_LOGIC;
    signal ctrl_in_V_0_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal ctrl_in_V_0_state_cmp_full : STD_LOGIC;
    signal ctrl_out_V_1_data_out : STD_LOGIC_VECTOR (63 downto 0);
    signal ctrl_out_V_1_vld_in : STD_LOGIC;
    signal ctrl_out_V_1_vld_out : STD_LOGIC;
    signal ctrl_out_V_1_ack_in : STD_LOGIC;
    signal ctrl_out_V_1_ack_out : STD_LOGIC;
    signal ctrl_out_V_1_payload_A : STD_LOGIC_VECTOR (63 downto 0);
    signal ctrl_out_V_1_payload_B : STD_LOGIC_VECTOR (63 downto 0);
    signal ctrl_out_V_1_sel_rd : STD_LOGIC := '0';
    signal ctrl_out_V_1_sel_wr : STD_LOGIC := '0';
    signal ctrl_out_V_1_sel : STD_LOGIC;
    signal ctrl_out_V_1_load_A : STD_LOGIC;
    signal ctrl_out_V_1_load_B : STD_LOGIC;
    signal ctrl_out_V_1_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal ctrl_out_V_1_state_cmp_full : STD_LOGIC;
    signal hard_data_V_V_0_data_out : STD_LOGIC_VECTOR (95 downto 0);
    signal hard_data_V_V_0_vld_in : STD_LOGIC;
    signal hard_data_V_V_0_vld_out : STD_LOGIC;
    signal hard_data_V_V_0_ack_in : STD_LOGIC;
    signal hard_data_V_V_0_ack_out : STD_LOGIC;
    signal hard_data_V_V_0_payload_A : STD_LOGIC_VECTOR (95 downto 0);
    signal hard_data_V_V_0_payload_B : STD_LOGIC_VECTOR (95 downto 0);
    signal hard_data_V_V_0_sel_rd : STD_LOGIC := '0';
    signal hard_data_V_V_0_sel_wr : STD_LOGIC := '0';
    signal hard_data_V_V_0_sel : STD_LOGIC;
    signal hard_data_V_V_0_load_A : STD_LOGIC;
    signal hard_data_V_V_0_load_B : STD_LOGIC;
    signal hard_data_V_V_0_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal hard_data_V_V_0_state_cmp_full : STD_LOGIC;
    signal chan_data_1_V_1_data_out : STD_LOGIC_VECTOR (39 downto 0);
    signal chan_data_1_V_1_vld_in : STD_LOGIC;
    signal chan_data_1_V_1_vld_out : STD_LOGIC;
    signal chan_data_1_V_1_ack_in : STD_LOGIC;
    signal chan_data_1_V_1_ack_out : STD_LOGIC;
    signal chan_data_1_V_1_payload_A : STD_LOGIC_VECTOR (39 downto 0);
    signal chan_data_1_V_1_payload_B : STD_LOGIC_VECTOR (39 downto 0);
    signal chan_data_1_V_1_sel_rd : STD_LOGIC := '0';
    signal chan_data_1_V_1_sel_wr : STD_LOGIC := '0';
    signal chan_data_1_V_1_sel : STD_LOGIC;
    signal chan_data_1_V_1_load_A : STD_LOGIC;
    signal chan_data_1_V_1_load_B : STD_LOGIC;
    signal chan_data_1_V_1_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal chan_data_1_V_1_state_cmp_full : STD_LOGIC;
    signal chan_data_2_V_1_data_out : STD_LOGIC_VECTOR (39 downto 0);
    signal chan_data_2_V_1_vld_in : STD_LOGIC;
    signal chan_data_2_V_1_vld_out : STD_LOGIC;
    signal chan_data_2_V_1_ack_in : STD_LOGIC;
    signal chan_data_2_V_1_ack_out : STD_LOGIC;
    signal chan_data_2_V_1_payload_A : STD_LOGIC_VECTOR (39 downto 0);
    signal chan_data_2_V_1_payload_B : STD_LOGIC_VECTOR (39 downto 0);
    signal chan_data_2_V_1_sel_rd : STD_LOGIC := '0';
    signal chan_data_2_V_1_sel_wr : STD_LOGIC := '0';
    signal chan_data_2_V_1_sel : STD_LOGIC;
    signal chan_data_2_V_1_load_A : STD_LOGIC;
    signal chan_data_2_V_1_load_B : STD_LOGIC;
    signal chan_data_2_V_1_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal chan_data_2_V_1_state_cmp_full : STD_LOGIC;
    signal chan_data_3_V_1_data_out : STD_LOGIC_VECTOR (39 downto 0);
    signal chan_data_3_V_1_vld_in : STD_LOGIC;
    signal chan_data_3_V_1_vld_out : STD_LOGIC;
    signal chan_data_3_V_1_ack_in : STD_LOGIC;
    signal chan_data_3_V_1_ack_out : STD_LOGIC;
    signal chan_data_3_V_1_payload_A : STD_LOGIC_VECTOR (39 downto 0);
    signal chan_data_3_V_1_payload_B : STD_LOGIC_VECTOR (39 downto 0);
    signal chan_data_3_V_1_sel_rd : STD_LOGIC := '0';
    signal chan_data_3_V_1_sel_wr : STD_LOGIC := '0';
    signal chan_data_3_V_1_sel : STD_LOGIC;
    signal chan_data_3_V_1_load_A : STD_LOGIC;
    signal chan_data_3_V_1_load_B : STD_LOGIC;
    signal chan_data_3_V_1_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal chan_data_3_V_1_state_cmp_full : STD_LOGIC;
    signal chan_data_4_V_1_data_out : STD_LOGIC_VECTOR (39 downto 0);
    signal chan_data_4_V_1_vld_in : STD_LOGIC;
    signal chan_data_4_V_1_vld_out : STD_LOGIC;
    signal chan_data_4_V_1_ack_in : STD_LOGIC;
    signal chan_data_4_V_1_ack_out : STD_LOGIC;
    signal chan_data_4_V_1_payload_A : STD_LOGIC_VECTOR (39 downto 0);
    signal chan_data_4_V_1_payload_B : STD_LOGIC_VECTOR (39 downto 0);
    signal chan_data_4_V_1_sel_rd : STD_LOGIC := '0';
    signal chan_data_4_V_1_sel_wr : STD_LOGIC := '0';
    signal chan_data_4_V_1_sel : STD_LOGIC;
    signal chan_data_4_V_1_load_A : STD_LOGIC;
    signal chan_data_4_V_1_load_B : STD_LOGIC;
    signal chan_data_4_V_1_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal chan_data_4_V_1_state_cmp_full : STD_LOGIC;
    signal QAM16_LUT_M_real_V_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal QAM16_LUT_M_real_V_ce0 : STD_LOGIC;
    signal QAM16_LUT_M_real_V_q0 : STD_LOGIC_VECTOR (14 downto 0);
    signal QAM16_LUT_M_real_V_address1 : STD_LOGIC_VECTOR (3 downto 0);
    signal QAM16_LUT_M_real_V_ce1 : STD_LOGIC;
    signal QAM16_LUT_M_real_V_q1 : STD_LOGIC_VECTOR (14 downto 0);
    signal QAM16_LUT_M_real_V_address2 : STD_LOGIC_VECTOR (3 downto 0);
    signal QAM16_LUT_M_real_V_ce2 : STD_LOGIC;
    signal QAM16_LUT_M_real_V_q2 : STD_LOGIC_VECTOR (14 downto 0);
    signal QAM16_LUT_M_real_V_address3 : STD_LOGIC_VECTOR (3 downto 0);
    signal QAM16_LUT_M_real_V_ce3 : STD_LOGIC;
    signal QAM16_LUT_M_real_V_q3 : STD_LOGIC_VECTOR (14 downto 0);
    signal QAM16_LUT_M_imag_V_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal QAM16_LUT_M_imag_V_ce0 : STD_LOGIC;
    signal QAM16_LUT_M_imag_V_q0 : STD_LOGIC_VECTOR (14 downto 0);
    signal QAM16_LUT_M_imag_V_address1 : STD_LOGIC_VECTOR (3 downto 0);
    signal QAM16_LUT_M_imag_V_ce1 : STD_LOGIC;
    signal QAM16_LUT_M_imag_V_q1 : STD_LOGIC_VECTOR (14 downto 0);
    signal QAM16_LUT_M_imag_V_address2 : STD_LOGIC_VECTOR (3 downto 0);
    signal QAM16_LUT_M_imag_V_ce2 : STD_LOGIC;
    signal QAM16_LUT_M_imag_V_q2 : STD_LOGIC_VECTOR (14 downto 0);
    signal QAM16_LUT_M_imag_V_address3 : STD_LOGIC_VECTOR (3 downto 0);
    signal QAM16_LUT_M_imag_V_ce3 : STD_LOGIC;
    signal QAM16_LUT_M_imag_V_q3 : STD_LOGIC_VECTOR (14 downto 0);
    signal QAM64_LUT_M_real_V_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal QAM64_LUT_M_real_V_ce0 : STD_LOGIC;
    signal QAM64_LUT_M_real_V_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal QAM64_LUT_M_real_V_address1 : STD_LOGIC_VECTOR (5 downto 0);
    signal QAM64_LUT_M_real_V_ce1 : STD_LOGIC;
    signal QAM64_LUT_M_real_V_q1 : STD_LOGIC_VECTOR (15 downto 0);
    signal QAM64_LUT_M_real_V_address2 : STD_LOGIC_VECTOR (5 downto 0);
    signal QAM64_LUT_M_real_V_ce2 : STD_LOGIC;
    signal QAM64_LUT_M_real_V_q2 : STD_LOGIC_VECTOR (15 downto 0);
    signal QAM64_LUT_M_real_V_address3 : STD_LOGIC_VECTOR (5 downto 0);
    signal QAM64_LUT_M_real_V_ce3 : STD_LOGIC;
    signal QAM64_LUT_M_real_V_q3 : STD_LOGIC_VECTOR (15 downto 0);
    signal QAM64_LUT_M_imag_V_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal QAM64_LUT_M_imag_V_ce0 : STD_LOGIC;
    signal QAM64_LUT_M_imag_V_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal QAM64_LUT_M_imag_V_address1 : STD_LOGIC_VECTOR (5 downto 0);
    signal QAM64_LUT_M_imag_V_ce1 : STD_LOGIC;
    signal QAM64_LUT_M_imag_V_q1 : STD_LOGIC_VECTOR (15 downto 0);
    signal QAM64_LUT_M_imag_V_address2 : STD_LOGIC_VECTOR (5 downto 0);
    signal QAM64_LUT_M_imag_V_ce2 : STD_LOGIC;
    signal QAM64_LUT_M_imag_V_q2 : STD_LOGIC_VECTOR (15 downto 0);
    signal QAM64_LUT_M_imag_V_address3 : STD_LOGIC_VECTOR (5 downto 0);
    signal QAM64_LUT_M_imag_V_ce3 : STD_LOGIC;
    signal QAM64_LUT_M_imag_V_q3 : STD_LOGIC_VECTOR (15 downto 0);
    signal ctrl_in_V_TDATA_blk_n : STD_LOGIC;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal ctrl_out_V_TDATA_blk_n : STD_LOGIC;
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal hard_data_V_V_TDATA_blk_n : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal tmp_9_reg_2203 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_10_reg_2207 : STD_LOGIC_VECTOR (0 downto 0);
    signal chan_data_1_V_TDATA_blk_n : STD_LOGIC;
    signal ap_enable_reg_pp0_iter16 : STD_LOGIC := '0';
    signal tmp_9_reg_2203_pp0_iter15_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_reg_pp0_iter17 : STD_LOGIC := '0';
    signal tmp_9_reg_2203_pp0_iter16_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal chan_data_2_V_TDATA_blk_n : STD_LOGIC;
    signal chan_data_3_V_TDATA_blk_n : STD_LOGIC;
    signal chan_data_4_V_TDATA_blk_n : STD_LOGIC;
    signal p_3_reg_471 : STD_LOGIC_VECTOR (95 downto 0);
    signal symbols_reg_483 : STD_LOGIC_VECTOR (13 downto 0);
    signal ctrl_mod_type_V_reg_2023 : STD_LOGIC_VECTOR (2 downto 0);
    signal ctrl_skip_chan_V_reg_2032 : STD_LOGIC_VECTOR (0 downto 0);
    signal ctrl_snr_V_fu_633_p4 : STD_LOGIC_VECTOR (16 downto 0);
    signal ctrl_snr_V_reg_2044 : STD_LOGIC_VECTOR (16 downto 0);
    signal ctrl_block_symbls_V_reg_2049 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_1_cast_fu_653_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_8_fu_672_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_8_reg_2059 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp2_fu_684_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp2_reg_2065 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_fu_690_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_reg_2071 : STD_LOGIC_VECTOR (0 downto 0);
    signal sh_assign_fu_727_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal sh_assign_reg_2077 : STD_LOGIC_VECTOR (1 downto 0);
    signal signbit_reg_2082 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_4_fu_777_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_4_reg_2089 : STD_LOGIC_VECTOR (7 downto 0);
    signal carry_fu_797_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal carry_reg_2095 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_4_reg_2101 : STD_LOGIC_VECTOR (1 downto 0);
    signal sh_assign_cast_fu_834_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal sh_assign_cast_reg_2107 : STD_LOGIC_VECTOR (20 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal awgn_snr_V_fu_918_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal awgn_snr_V_reg_2119 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_13_cast_fu_926_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_13_cast_reg_2131 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_5_fu_934_p1 : STD_LOGIC_VECTOR (95 downto 0);
    signal tmp_5_reg_2137 : STD_LOGIC_VECTOR (95 downto 0);
    signal tmp_20_cast_fu_944_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_20_cast_reg_2142 : STD_LOGIC_VECTOR (7 downto 0);
    signal sel_tmp_fu_948_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp_reg_2147 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp5_fu_953_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp5_reg_2155 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp7_fu_958_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp7_reg_2171 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp9_fu_963_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp9_reg_2187 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_9_fu_968_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state5_pp0_stage0_iter0 : BOOLEAN;
    signal ap_predicate_op130_read_state6 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_state10_pp0_stage0_iter5 : BOOLEAN;
    signal ap_block_state11_pp0_stage0_iter6 : BOOLEAN;
    signal ap_block_state12_pp0_stage0_iter7 : BOOLEAN;
    signal ap_block_state13_pp0_stage0_iter8 : BOOLEAN;
    signal ap_block_state14_pp0_stage0_iter9 : BOOLEAN;
    signal ap_block_state15_pp0_stage0_iter10 : BOOLEAN;
    signal ap_block_state16_pp0_stage0_iter11 : BOOLEAN;
    signal ap_block_state17_pp0_stage0_iter12 : BOOLEAN;
    signal ap_block_state18_pp0_stage0_iter13 : BOOLEAN;
    signal ap_block_state19_pp0_stage0_iter14 : BOOLEAN;
    signal ap_block_state20_pp0_stage0_iter15 : BOOLEAN;
    signal ap_block_state21_pp0_stage0_iter16 : BOOLEAN;
    signal ap_block_state21_io : BOOLEAN;
    signal ap_block_state22_pp0_stage0_iter17 : BOOLEAN;
    signal ap_block_state22_io : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal tmp_9_reg_2203_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_9_reg_2203_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_9_reg_2203_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_9_reg_2203_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_9_reg_2203_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_9_reg_2203_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_9_reg_2203_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_9_reg_2203_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_9_reg_2203_pp0_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_9_reg_2203_pp0_iter10_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_9_reg_2203_pp0_iter11_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_9_reg_2203_pp0_iter12_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_9_reg_2203_pp0_iter13_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_9_reg_2203_pp0_iter14_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_10_fu_977_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_10_reg_2207_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal symbols_V_1_fu_1002_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal symbol_1_V_fu_1017_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal symbol_1_V_reg_2221 : STD_LOGIC_VECTOR (5 downto 0);
    signal symbol_1_V_reg_2221_pp0_iter3_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal symbol_1_V_reg_2221_pp0_iter4_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal symbol_1_V_reg_2221_pp0_iter5_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal symbol_1_V_reg_2221_pp0_iter6_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal symbol_1_V_reg_2221_pp0_iter7_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal symbol_1_V_reg_2221_pp0_iter8_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal symbol_1_V_reg_2221_pp0_iter9_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal symbol_1_V_reg_2221_pp0_iter10_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal symbol_1_V_reg_2221_pp0_iter11_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal symbol_1_V_reg_2221_pp0_iter12_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal symbol_1_V_reg_2221_pp0_iter13_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal symbol_2_V_8_fu_1122_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal symbol_2_V_8_reg_2229 : STD_LOGIC_VECTOR (5 downto 0);
    signal symbol_2_V_8_reg_2229_pp0_iter3_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal symbol_2_V_8_reg_2229_pp0_iter4_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal symbol_2_V_8_reg_2229_pp0_iter5_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal symbol_2_V_8_reg_2229_pp0_iter6_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal symbol_2_V_8_reg_2229_pp0_iter7_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal symbol_2_V_8_reg_2229_pp0_iter8_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal symbol_2_V_8_reg_2229_pp0_iter9_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal symbol_2_V_8_reg_2229_pp0_iter10_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal symbol_2_V_8_reg_2229_pp0_iter11_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal symbol_2_V_8_reg_2229_pp0_iter12_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal symbol_2_V_8_reg_2229_pp0_iter13_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal symbol_3_V_10_fu_1150_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal symbol_3_V_10_reg_2234 : STD_LOGIC_VECTOR (5 downto 0);
    signal symbol_3_V_10_reg_2234_pp0_iter3_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal symbol_3_V_10_reg_2234_pp0_iter4_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal symbol_3_V_10_reg_2234_pp0_iter5_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal symbol_3_V_10_reg_2234_pp0_iter6_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal symbol_3_V_10_reg_2234_pp0_iter7_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal symbol_3_V_10_reg_2234_pp0_iter8_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal symbol_3_V_10_reg_2234_pp0_iter9_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal symbol_3_V_10_reg_2234_pp0_iter10_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal symbol_3_V_10_reg_2234_pp0_iter11_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal symbol_3_V_10_reg_2234_pp0_iter12_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal symbol_3_V_10_reg_2234_pp0_iter13_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal p_Val2_38_fu_1178_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal p_Val2_38_reg_2239 : STD_LOGIC_VECTOR (5 downto 0);
    signal p_Val2_38_reg_2239_pp0_iter3_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal p_Val2_38_reg_2239_pp0_iter4_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal p_Val2_38_reg_2239_pp0_iter5_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal p_Val2_38_reg_2239_pp0_iter6_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal p_Val2_38_reg_2239_pp0_iter7_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal p_Val2_38_reg_2239_pp0_iter8_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal p_Val2_38_reg_2239_pp0_iter9_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal p_Val2_38_reg_2239_pp0_iter10_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal p_Val2_38_reg_2239_pp0_iter11_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal p_Val2_38_reg_2239_pp0_iter12_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal p_Val2_38_reg_2239_pp0_iter13_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal r_V_fu_1185_p2 : STD_LOGIC_VECTOR (95 downto 0);
    signal r_V_reg_2244 : STD_LOGIC_VECTOR (95 downto 0);
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal tmp_19_fu_1190_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_19_reg_2249 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_19_reg_2249_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_19_reg_2249_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_19_reg_2249_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_19_reg_2249_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_19_reg_2249_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_19_reg_2249_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_19_reg_2249_pp0_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_19_reg_2249_pp0_iter10_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_19_reg_2249_pp0_iter11_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_19_reg_2249_pp0_iter12_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_19_reg_2249_pp0_iter13_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_19_reg_2249_pp0_iter14_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_20_fu_1194_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_20_reg_2254 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_20_reg_2254_pp0_iter3_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_20_reg_2254_pp0_iter4_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_20_reg_2254_pp0_iter5_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_20_reg_2254_pp0_iter6_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_20_reg_2254_pp0_iter7_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_20_reg_2254_pp0_iter8_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_20_reg_2254_pp0_iter9_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_20_reg_2254_pp0_iter10_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_20_reg_2254_pp0_iter11_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_20_reg_2254_pp0_iter12_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_20_reg_2254_pp0_iter13_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_20_reg_2254_pp0_iter14_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_21_fu_1198_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_21_reg_2260 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_21_reg_2260_pp0_iter3_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_21_reg_2260_pp0_iter4_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_21_reg_2260_pp0_iter5_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_21_reg_2260_pp0_iter6_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_21_reg_2260_pp0_iter7_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_21_reg_2260_pp0_iter8_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_21_reg_2260_pp0_iter9_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_21_reg_2260_pp0_iter10_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_21_reg_2260_pp0_iter11_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_21_reg_2260_pp0_iter12_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_21_reg_2260_pp0_iter13_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_22_fu_1202_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_22_reg_2265 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_22_reg_2265_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_22_reg_2265_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_22_reg_2265_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_22_reg_2265_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_22_reg_2265_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_22_reg_2265_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_22_reg_2265_pp0_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_22_reg_2265_pp0_iter10_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_22_reg_2265_pp0_iter11_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_22_reg_2265_pp0_iter12_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_22_reg_2265_pp0_iter13_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_22_reg_2265_pp0_iter14_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_23_fu_1206_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_23_reg_2270 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_23_reg_2270_pp0_iter3_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_23_reg_2270_pp0_iter4_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_23_reg_2270_pp0_iter5_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_23_reg_2270_pp0_iter6_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_23_reg_2270_pp0_iter7_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_23_reg_2270_pp0_iter8_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_23_reg_2270_pp0_iter9_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_23_reg_2270_pp0_iter10_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_23_reg_2270_pp0_iter11_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_23_reg_2270_pp0_iter12_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_23_reg_2270_pp0_iter13_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_23_reg_2270_pp0_iter14_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_24_fu_1210_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_24_reg_2276 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_24_reg_2276_pp0_iter3_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_24_reg_2276_pp0_iter4_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_24_reg_2276_pp0_iter5_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_24_reg_2276_pp0_iter6_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_24_reg_2276_pp0_iter7_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_24_reg_2276_pp0_iter8_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_24_reg_2276_pp0_iter9_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_24_reg_2276_pp0_iter10_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_24_reg_2276_pp0_iter11_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_24_reg_2276_pp0_iter12_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_24_reg_2276_pp0_iter13_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_25_fu_1214_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_25_reg_2281 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_25_reg_2281_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_25_reg_2281_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_25_reg_2281_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_25_reg_2281_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_25_reg_2281_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_25_reg_2281_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_25_reg_2281_pp0_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_25_reg_2281_pp0_iter10_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_25_reg_2281_pp0_iter11_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_25_reg_2281_pp0_iter12_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_25_reg_2281_pp0_iter13_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_25_reg_2281_pp0_iter14_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_26_fu_1218_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_26_reg_2286 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_26_reg_2286_pp0_iter3_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_26_reg_2286_pp0_iter4_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_26_reg_2286_pp0_iter5_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_26_reg_2286_pp0_iter6_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_26_reg_2286_pp0_iter7_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_26_reg_2286_pp0_iter8_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_26_reg_2286_pp0_iter9_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_26_reg_2286_pp0_iter10_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_26_reg_2286_pp0_iter11_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_26_reg_2286_pp0_iter12_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_26_reg_2286_pp0_iter13_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_26_reg_2286_pp0_iter14_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_27_fu_1222_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_27_reg_2292 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_27_reg_2292_pp0_iter3_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_27_reg_2292_pp0_iter4_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_27_reg_2292_pp0_iter5_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_27_reg_2292_pp0_iter6_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_27_reg_2292_pp0_iter7_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_27_reg_2292_pp0_iter8_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_27_reg_2292_pp0_iter9_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_27_reg_2292_pp0_iter10_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_27_reg_2292_pp0_iter11_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_27_reg_2292_pp0_iter12_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_27_reg_2292_pp0_iter13_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_16_fu_1268_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_16_reg_2297 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_17_fu_1272_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_17_reg_2302 : STD_LOGIC_VECTOR (1 downto 0);
    signal p_Val2_37_fu_1382_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_37_reg_2388 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_21_fu_1403_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_21_reg_2393 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_22_fu_1465_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_22_reg_2398 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_23_fu_1486_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_23_reg_2403 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_24_fu_1548_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_24_reg_2408 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_25_fu_1569_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_25_reg_2413 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_26_fu_1631_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_26_reg_2418 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_27_fu_1652_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_27_reg_2423 : STD_LOGIC_VECTOR (15 downto 0);
    signal cast1_fu_1947_p1 : STD_LOGIC_VECTOR (39 downto 0);
    signal cast2_fu_1960_p1 : STD_LOGIC_VECTOR (39 downto 0);
    signal cast3_fu_1973_p1 : STD_LOGIC_VECTOR (39 downto 0);
    signal cast4_fu_1986_p1 : STD_LOGIC_VECTOR (39 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state5 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter6 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter7 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter8 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter9 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter10 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter11 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter12 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter13 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter14 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter15 : STD_LOGIC := '0';
    signal grp_awgn_real1_fu_502_ap_start : STD_LOGIC;
    signal grp_awgn_real1_fu_502_ap_done : STD_LOGIC;
    signal grp_awgn_real1_fu_502_ap_idle : STD_LOGIC;
    signal grp_awgn_real1_fu_502_ap_ready : STD_LOGIC;
    signal grp_awgn_real1_fu_502_ap_ce : STD_LOGIC;
    signal grp_awgn_real1_fu_502_ap_return : STD_LOGIC_VECTOR (17 downto 0);
    signal grp_awgn_imag1_fu_515_ap_start : STD_LOGIC;
    signal grp_awgn_imag1_fu_515_ap_done : STD_LOGIC;
    signal grp_awgn_imag1_fu_515_ap_idle : STD_LOGIC;
    signal grp_awgn_imag1_fu_515_ap_ready : STD_LOGIC;
    signal grp_awgn_imag1_fu_515_ap_ce : STD_LOGIC;
    signal grp_awgn_imag1_fu_515_ap_return : STD_LOGIC_VECTOR (17 downto 0);
    signal grp_awgn_real2_fu_528_ap_start : STD_LOGIC;
    signal grp_awgn_real2_fu_528_ap_done : STD_LOGIC;
    signal grp_awgn_real2_fu_528_ap_idle : STD_LOGIC;
    signal grp_awgn_real2_fu_528_ap_ready : STD_LOGIC;
    signal grp_awgn_real2_fu_528_ap_ce : STD_LOGIC;
    signal grp_awgn_real2_fu_528_ap_return : STD_LOGIC_VECTOR (17 downto 0);
    signal grp_awgn_imag2_fu_541_ap_start : STD_LOGIC;
    signal grp_awgn_imag2_fu_541_ap_done : STD_LOGIC;
    signal grp_awgn_imag2_fu_541_ap_idle : STD_LOGIC;
    signal grp_awgn_imag2_fu_541_ap_ready : STD_LOGIC;
    signal grp_awgn_imag2_fu_541_ap_ce : STD_LOGIC;
    signal grp_awgn_imag2_fu_541_ap_return : STD_LOGIC_VECTOR (17 downto 0);
    signal grp_awgn_real3_fu_554_ap_start : STD_LOGIC;
    signal grp_awgn_real3_fu_554_ap_done : STD_LOGIC;
    signal grp_awgn_real3_fu_554_ap_idle : STD_LOGIC;
    signal grp_awgn_real3_fu_554_ap_ready : STD_LOGIC;
    signal grp_awgn_real3_fu_554_ap_ce : STD_LOGIC;
    signal grp_awgn_real3_fu_554_ap_return : STD_LOGIC_VECTOR (17 downto 0);
    signal grp_awgn_imag3_fu_567_ap_start : STD_LOGIC;
    signal grp_awgn_imag3_fu_567_ap_done : STD_LOGIC;
    signal grp_awgn_imag3_fu_567_ap_idle : STD_LOGIC;
    signal grp_awgn_imag3_fu_567_ap_ready : STD_LOGIC;
    signal grp_awgn_imag3_fu_567_ap_ce : STD_LOGIC;
    signal grp_awgn_imag3_fu_567_ap_return : STD_LOGIC_VECTOR (17 downto 0);
    signal grp_awgn_real4_fu_580_ap_start : STD_LOGIC;
    signal grp_awgn_real4_fu_580_ap_done : STD_LOGIC;
    signal grp_awgn_real4_fu_580_ap_idle : STD_LOGIC;
    signal grp_awgn_real4_fu_580_ap_ready : STD_LOGIC;
    signal grp_awgn_real4_fu_580_ap_ce : STD_LOGIC;
    signal grp_awgn_real4_fu_580_ap_return : STD_LOGIC_VECTOR (17 downto 0);
    signal grp_awgn_imag4_fu_593_ap_start : STD_LOGIC;
    signal grp_awgn_imag4_fu_593_ap_done : STD_LOGIC;
    signal grp_awgn_imag4_fu_593_ap_idle : STD_LOGIC;
    signal grp_awgn_imag4_fu_593_ap_ready : STD_LOGIC;
    signal grp_awgn_imag4_fu_593_ap_ce : STD_LOGIC;
    signal grp_awgn_imag4_fu_593_ap_return : STD_LOGIC_VECTOR (17 downto 0);
    signal ap_phi_mux_p_3_phi_fu_475_p4 : STD_LOGIC_VECTOR (95 downto 0);
    signal ap_phi_mux_p_Val2_5_phi_fu_495_p4 : STD_LOGIC_VECTOR (95 downto 0);
    signal ap_phi_reg_pp0_iter0_p_Val2_5_reg_492 : STD_LOGIC_VECTOR (95 downto 0);
    signal ap_phi_reg_pp0_iter1_p_Val2_5_reg_492 : STD_LOGIC_VECTOR (95 downto 0);
    signal ap_phi_reg_pp0_iter2_p_Val2_5_reg_492 : STD_LOGIC_VECTOR (95 downto 0);
    signal grp_awgn_real1_fu_502_ap_start_reg : STD_LOGIC := '0';
    signal grp_awgn_imag1_fu_515_ap_start_reg : STD_LOGIC := '0';
    signal grp_awgn_real2_fu_528_ap_start_reg : STD_LOGIC := '0';
    signal grp_awgn_imag2_fu_541_ap_start_reg : STD_LOGIC := '0';
    signal grp_awgn_real3_fu_554_ap_start_reg : STD_LOGIC := '0';
    signal grp_awgn_imag3_fu_567_ap_start_reg : STD_LOGIC := '0';
    signal grp_awgn_real4_fu_580_ap_start_reg : STD_LOGIC := '0';
    signal grp_awgn_imag4_fu_593_ap_start_reg : STD_LOGIC := '0';
    signal tmp_4_i_fu_1280_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_5_i_fu_1286_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_1_i_fu_1292_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_2_i_fu_1297_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_7_i_fu_1302_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_8_i_fu_1307_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_3_i_fu_1312_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_4_i1_fu_1317_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_Result_s_fu_224 : STD_LOGIC_VECTOR (5 downto 0);
    signal p_Result_1_fu_228 : STD_LOGIC_VECTOR (5 downto 0);
    signal p_Result_2_fu_232 : STD_LOGIC_VECTOR (5 downto 0);
    signal p_Result_3_fu_236 : STD_LOGIC_VECTOR (5 downto 0);
    signal symbol_1_V_5_fu_1262_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal remaining_bits_fu_240 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal remaining_bits_2_fu_982_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal remaining_bits_1_fu_992_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal tmp_1_fu_611_p1 : STD_LOGIC_VECTOR (57 downto 0);
    signal tmp_6_fu_658_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_fu_664_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp1_fu_678_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal newSel_fu_699_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal newSel143_cast_cast_fu_706_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal sel_tmp3_fu_720_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal p_8_cast_fu_696_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal p_Val2_1_fu_713_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal snr_mod_V_fu_734_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_12_fu_757_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_s_fu_765_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_3_fu_747_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_14_fu_783_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_13_fu_769_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_2_fu_791_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range1_all_ones_fu_837_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range1_all_zeros_fu_842_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_38_i_fu_854_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_3_fu_859_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal deleted_zeros_fu_847_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal signbit_not_fu_875_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_39_demorgan_i_fu_870_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal neg_src_not_fu_880_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_39_demorgan_i_not_fu_892_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_i_i_not_fu_886_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal neg_src_fu_865_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_fu_898_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_mux_fu_904_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_s_fu_911_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_2_fu_813_p10 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_14_cast_fu_930_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_4_fu_938_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal symbol_4_V_3_fu_1061_p4 : STD_LOGIC_VECTOR (5 downto 0);
    signal symbol_3_V_9_fu_1051_p4 : STD_LOGIC_VECTOR (5 downto 0);
    signal symbol_2_V_4_fu_1101_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal symbol_3_V_8_fu_1031_p4 : STD_LOGIC_VECTOR (5 downto 0);
    signal symbol_2_V_5_fu_1108_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal symbol_2_V_fu_1021_p4 : STD_LOGIC_VECTOR (5 downto 0);
    signal symbol_2_V_6_fu_1115_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal symbol_3_V_1_fu_1081_p4 : STD_LOGIC_VECTOR (5 downto 0);
    signal symbol_3_V_fu_1071_p4 : STD_LOGIC_VECTOR (5 downto 0);
    signal symbol_3_V_2_fu_1129_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal symbol_3_V_3_fu_1136_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal symbol_3_V_4_fu_1143_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal symbol_4_V_2_fu_1091_p4 : STD_LOGIC_VECTOR (5 downto 0);
    signal sel_tmp4_fu_1157_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal sel_tmp6_fu_1164_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal symbol_4_V_fu_1041_p4 : STD_LOGIC_VECTOR (5 downto 0);
    signal sel_tmp8_fu_1171_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal symbol_1_V_1_fu_1244_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal symbol_1_V_2_fu_1250_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal symbol_1_V_3_fu_1256_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_18_fu_1276_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal channel_data_M_imag_2_fu_1364_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal channel_data_M_imag_fu_1347_p6 : STD_LOGIC_VECTOR (15 downto 0);
    signal sel_tmp10_fu_1368_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal channel_data_M_real_fu_1327_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal sel_tmp11_fu_1375_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal channel_data_M_real_3_fu_1360_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal channel_data_M_real_1_fu_1334_p6 : STD_LOGIC_VECTOR (15 downto 0);
    signal sel_tmp12_fu_1389_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal sel_tmp13_fu_1396_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal channel_data_M_imag_6_fu_1447_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal channel_data_M_imag_5_fu_1430_p6 : STD_LOGIC_VECTOR (15 downto 0);
    signal sel_tmp14_fu_1451_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal channel_data_M_real_6_fu_1410_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal sel_tmp15_fu_1458_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal channel_data_M_real_8_fu_1443_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal channel_data_M_real_7_fu_1417_p6 : STD_LOGIC_VECTOR (15 downto 0);
    signal sel_tmp16_fu_1472_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal sel_tmp17_fu_1479_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal channel_data_M_imag_11_fu_1530_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal channel_data_M_imag_9_fu_1513_p6 : STD_LOGIC_VECTOR (15 downto 0);
    signal sel_tmp18_fu_1534_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal channel_data_M_real_11_fu_1493_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal sel_tmp19_fu_1541_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal channel_data_M_real_14_fu_1526_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal channel_data_M_real_12_fu_1500_p6 : STD_LOGIC_VECTOR (15 downto 0);
    signal sel_tmp20_fu_1555_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal sel_tmp21_fu_1562_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal channel_data_M_imag_3_fu_1613_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal channel_data_M_imag_13_fu_1596_p6 : STD_LOGIC_VECTOR (15 downto 0);
    signal sel_tmp22_fu_1617_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal channel_data_M_real_16_fu_1576_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal sel_tmp23_fu_1624_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal channel_data_M_real_2_fu_1609_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal channel_data_M_real_17_fu_1583_p6 : STD_LOGIC_VECTOR (15 downto 0);
    signal sel_tmp24_fu_1638_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal sel_tmp25_fu_1645_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_cast_fu_1659_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal p_Val2_35_fu_1663_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal tmp_23_cast_fu_1678_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal p_Val2_6_fu_1682_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal tmp_26_cast_fu_1697_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal p_Val2_8_fu_1701_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal tmp_29_cast_fu_1716_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal p_Val2_10_fu_1720_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal tmp_32_cast_fu_1735_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal p_Val2_12_fu_1739_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal tmp_35_cast_fu_1754_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal p_Val2_14_fu_1758_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal tmp_38_cast_fu_1773_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal p_Val2_16_fu_1777_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal tmp_41_cast_fu_1792_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal p_Val2_18_fu_1796_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal p_Val2_36_fu_1668_p4 : STD_LOGIC_VECTOR (18 downto 0);
    signal err_sample_real_1_V_fu_1811_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal p_Val2_7_fu_1687_p4 : STD_LOGIC_VECTOR (18 downto 0);
    signal err_sample_imag_1_V_fu_1814_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal p_Val2_9_fu_1706_p4 : STD_LOGIC_VECTOR (18 downto 0);
    signal err_sample_real_2_V_fu_1817_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal p_Val2_11_fu_1725_p4 : STD_LOGIC_VECTOR (18 downto 0);
    signal err_sample_imag_2_V_fu_1820_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal p_Val2_13_fu_1744_p4 : STD_LOGIC_VECTOR (18 downto 0);
    signal err_sample_real_3_V_fu_1823_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal p_Val2_15_fu_1763_p4 : STD_LOGIC_VECTOR (18 downto 0);
    signal err_sample_imag_3_V_fu_1826_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal p_Val2_17_fu_1782_p4 : STD_LOGIC_VECTOR (18 downto 0);
    signal err_sample_real_4_V_fu_1829_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal p_Val2_19_fu_1801_p4 : STD_LOGIC_VECTOR (18 downto 0);
    signal err_sample_imag_4_V_fu_1832_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal err_sample_real_1_V_1_fu_1835_p2 : STD_LOGIC_VECTOR (18 downto 0);
    signal err_sample_imag_1_V_1_fu_1841_p2 : STD_LOGIC_VECTOR (18 downto 0);
    signal err_sample_real_2_V_1_fu_1847_p2 : STD_LOGIC_VECTOR (18 downto 0);
    signal err_sample_imag_2_V_1_fu_1853_p2 : STD_LOGIC_VECTOR (18 downto 0);
    signal err_sample_real_3_V_1_fu_1859_p2 : STD_LOGIC_VECTOR (18 downto 0);
    signal err_sample_imag_3_V_1_fu_1865_p2 : STD_LOGIC_VECTOR (18 downto 0);
    signal err_sample_real_4_V_1_fu_1871_p2 : STD_LOGIC_VECTOR (18 downto 0);
    signal err_sample_imag_4_V_1_fu_1877_p2 : STD_LOGIC_VECTOR (18 downto 0);
    signal err_sample_imag_1_V_3_fu_1890_p3 : STD_LOGIC_VECTOR (18 downto 0);
    signal err_sample_real_1_V_3_fu_1883_p3 : STD_LOGIC_VECTOR (18 downto 0);
    signal tmp_2_1_fu_1939_p3 : STD_LOGIC_VECTOR (37 downto 0);
    signal err_sample_imag_2_V_3_fu_1904_p3 : STD_LOGIC_VECTOR (18 downto 0);
    signal err_sample_real_2_V_3_fu_1897_p3 : STD_LOGIC_VECTOR (18 downto 0);
    signal tmp_3_1_fu_1952_p3 : STD_LOGIC_VECTOR (37 downto 0);
    signal err_sample_imag_3_V_3_fu_1918_p3 : STD_LOGIC_VECTOR (18 downto 0);
    signal err_sample_real_3_V_3_fu_1911_p3 : STD_LOGIC_VECTOR (18 downto 0);
    signal tmp_4_1_fu_1965_p3 : STD_LOGIC_VECTOR (37 downto 0);
    signal err_sample_imag_4_V_3_fu_1932_p3 : STD_LOGIC_VECTOR (18 downto 0);
    signal err_sample_real_4_V_3_fu_1925_p3 : STD_LOGIC_VECTOR (18 downto 0);
    signal tmp_5_1_fu_1978_p3 : STD_LOGIC_VECTOR (37 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_CS_fsm_state23 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state23 : signal is "none";
    signal ap_block_state23 : BOOLEAN;
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_condition_1129 : BOOLEAN;

    component awgn_real1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_ce : IN STD_LOGIC;
        snr_V : IN STD_LOGIC_VECTOR (7 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (17 downto 0) );
    end component;


    component awgn_imag1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_ce : IN STD_LOGIC;
        snr_V : IN STD_LOGIC_VECTOR (7 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (17 downto 0) );
    end component;


    component awgn_real2 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_ce : IN STD_LOGIC;
        snr_V : IN STD_LOGIC_VECTOR (7 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (17 downto 0) );
    end component;


    component awgn_imag2 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_ce : IN STD_LOGIC;
        snr_V : IN STD_LOGIC_VECTOR (7 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (17 downto 0) );
    end component;


    component awgn_real3 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_ce : IN STD_LOGIC;
        snr_V : IN STD_LOGIC_VECTOR (7 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (17 downto 0) );
    end component;


    component awgn_imag3 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_ce : IN STD_LOGIC;
        snr_V : IN STD_LOGIC_VECTOR (7 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (17 downto 0) );
    end component;


    component awgn_real4 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_ce : IN STD_LOGIC;
        snr_V : IN STD_LOGIC_VECTOR (7 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (17 downto 0) );
    end component;


    component awgn_imag4 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_ce : IN STD_LOGIC;
        snr_V : IN STD_LOGIC_VECTOR (7 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (17 downto 0) );
    end component;


    component mod_and_chan_4x_mFfa IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        din4_WIDTH : INTEGER;
        din5_WIDTH : INTEGER;
        din6_WIDTH : INTEGER;
        din7_WIDTH : INTEGER;
        din8_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (5 downto 0);
        din1 : IN STD_LOGIC_VECTOR (5 downto 0);
        din2 : IN STD_LOGIC_VECTOR (5 downto 0);
        din3 : IN STD_LOGIC_VECTOR (5 downto 0);
        din4 : IN STD_LOGIC_VECTOR (5 downto 0);
        din5 : IN STD_LOGIC_VECTOR (5 downto 0);
        din6 : IN STD_LOGIC_VECTOR (5 downto 0);
        din7 : IN STD_LOGIC_VECTOR (5 downto 0);
        din8 : IN STD_LOGIC_VECTOR (2 downto 0);
        dout : OUT STD_LOGIC_VECTOR (5 downto 0) );
    end component;


    component mod_and_chan_4x_mGfk IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        din4_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (15 downto 0);
        din2 : IN STD_LOGIC_VECTOR (15 downto 0);
        din3 : IN STD_LOGIC_VECTOR (15 downto 0);
        din4 : IN STD_LOGIC_VECTOR (1 downto 0);
        dout : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component mod_and_chan_4x_QBew IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (14 downto 0);
        address1 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (14 downto 0);
        address2 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce2 : IN STD_LOGIC;
        q2 : OUT STD_LOGIC_VECTOR (14 downto 0);
        address3 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce3 : IN STD_LOGIC;
        q3 : OUT STD_LOGIC_VECTOR (14 downto 0) );
    end component;


    component mod_and_chan_4x_QCeG IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (14 downto 0);
        address1 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (14 downto 0);
        address2 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce2 : IN STD_LOGIC;
        q2 : OUT STD_LOGIC_VECTOR (14 downto 0);
        address3 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce3 : IN STD_LOGIC;
        q3 : OUT STD_LOGIC_VECTOR (14 downto 0) );
    end component;


    component mod_and_chan_4x_QDeQ IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        address1 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (15 downto 0);
        address2 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce2 : IN STD_LOGIC;
        q2 : OUT STD_LOGIC_VECTOR (15 downto 0);
        address3 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce3 : IN STD_LOGIC;
        q3 : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component mod_and_chan_4x_QEe0 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        address1 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (15 downto 0);
        address2 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce2 : IN STD_LOGIC;
        q2 : OUT STD_LOGIC_VECTOR (15 downto 0);
        address3 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce3 : IN STD_LOGIC;
        q3 : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;



begin
    QAM16_LUT_M_real_V_U : component mod_and_chan_4x_QBew
    generic map (
        DataWidth => 15,
        AddressRange => 16,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => QAM16_LUT_M_real_V_address0,
        ce0 => QAM16_LUT_M_real_V_ce0,
        q0 => QAM16_LUT_M_real_V_q0,
        address1 => QAM16_LUT_M_real_V_address1,
        ce1 => QAM16_LUT_M_real_V_ce1,
        q1 => QAM16_LUT_M_real_V_q1,
        address2 => QAM16_LUT_M_real_V_address2,
        ce2 => QAM16_LUT_M_real_V_ce2,
        q2 => QAM16_LUT_M_real_V_q2,
        address3 => QAM16_LUT_M_real_V_address3,
        ce3 => QAM16_LUT_M_real_V_ce3,
        q3 => QAM16_LUT_M_real_V_q3);

    QAM16_LUT_M_imag_V_U : component mod_and_chan_4x_QCeG
    generic map (
        DataWidth => 15,
        AddressRange => 16,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => QAM16_LUT_M_imag_V_address0,
        ce0 => QAM16_LUT_M_imag_V_ce0,
        q0 => QAM16_LUT_M_imag_V_q0,
        address1 => QAM16_LUT_M_imag_V_address1,
        ce1 => QAM16_LUT_M_imag_V_ce1,
        q1 => QAM16_LUT_M_imag_V_q1,
        address2 => QAM16_LUT_M_imag_V_address2,
        ce2 => QAM16_LUT_M_imag_V_ce2,
        q2 => QAM16_LUT_M_imag_V_q2,
        address3 => QAM16_LUT_M_imag_V_address3,
        ce3 => QAM16_LUT_M_imag_V_ce3,
        q3 => QAM16_LUT_M_imag_V_q3);

    QAM64_LUT_M_real_V_U : component mod_and_chan_4x_QDeQ
    generic map (
        DataWidth => 16,
        AddressRange => 64,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => QAM64_LUT_M_real_V_address0,
        ce0 => QAM64_LUT_M_real_V_ce0,
        q0 => QAM64_LUT_M_real_V_q0,
        address1 => QAM64_LUT_M_real_V_address1,
        ce1 => QAM64_LUT_M_real_V_ce1,
        q1 => QAM64_LUT_M_real_V_q1,
        address2 => QAM64_LUT_M_real_V_address2,
        ce2 => QAM64_LUT_M_real_V_ce2,
        q2 => QAM64_LUT_M_real_V_q2,
        address3 => QAM64_LUT_M_real_V_address3,
        ce3 => QAM64_LUT_M_real_V_ce3,
        q3 => QAM64_LUT_M_real_V_q3);

    QAM64_LUT_M_imag_V_U : component mod_and_chan_4x_QEe0
    generic map (
        DataWidth => 16,
        AddressRange => 64,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => QAM64_LUT_M_imag_V_address0,
        ce0 => QAM64_LUT_M_imag_V_ce0,
        q0 => QAM64_LUT_M_imag_V_q0,
        address1 => QAM64_LUT_M_imag_V_address1,
        ce1 => QAM64_LUT_M_imag_V_ce1,
        q1 => QAM64_LUT_M_imag_V_q1,
        address2 => QAM64_LUT_M_imag_V_address2,
        ce2 => QAM64_LUT_M_imag_V_ce2,
        q2 => QAM64_LUT_M_imag_V_q2,
        address3 => QAM64_LUT_M_imag_V_address3,
        ce3 => QAM64_LUT_M_imag_V_ce3,
        q3 => QAM64_LUT_M_imag_V_q3);

    grp_awgn_real1_fu_502 : component awgn_real1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_awgn_real1_fu_502_ap_start,
        ap_done => grp_awgn_real1_fu_502_ap_done,
        ap_idle => grp_awgn_real1_fu_502_ap_idle,
        ap_ready => grp_awgn_real1_fu_502_ap_ready,
        ap_ce => grp_awgn_real1_fu_502_ap_ce,
        snr_V => awgn_snr_V_reg_2119,
        ap_return => grp_awgn_real1_fu_502_ap_return);

    grp_awgn_imag1_fu_515 : component awgn_imag1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_awgn_imag1_fu_515_ap_start,
        ap_done => grp_awgn_imag1_fu_515_ap_done,
        ap_idle => grp_awgn_imag1_fu_515_ap_idle,
        ap_ready => grp_awgn_imag1_fu_515_ap_ready,
        ap_ce => grp_awgn_imag1_fu_515_ap_ce,
        snr_V => awgn_snr_V_reg_2119,
        ap_return => grp_awgn_imag1_fu_515_ap_return);

    grp_awgn_real2_fu_528 : component awgn_real2
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_awgn_real2_fu_528_ap_start,
        ap_done => grp_awgn_real2_fu_528_ap_done,
        ap_idle => grp_awgn_real2_fu_528_ap_idle,
        ap_ready => grp_awgn_real2_fu_528_ap_ready,
        ap_ce => grp_awgn_real2_fu_528_ap_ce,
        snr_V => awgn_snr_V_reg_2119,
        ap_return => grp_awgn_real2_fu_528_ap_return);

    grp_awgn_imag2_fu_541 : component awgn_imag2
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_awgn_imag2_fu_541_ap_start,
        ap_done => grp_awgn_imag2_fu_541_ap_done,
        ap_idle => grp_awgn_imag2_fu_541_ap_idle,
        ap_ready => grp_awgn_imag2_fu_541_ap_ready,
        ap_ce => grp_awgn_imag2_fu_541_ap_ce,
        snr_V => awgn_snr_V_reg_2119,
        ap_return => grp_awgn_imag2_fu_541_ap_return);

    grp_awgn_real3_fu_554 : component awgn_real3
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_awgn_real3_fu_554_ap_start,
        ap_done => grp_awgn_real3_fu_554_ap_done,
        ap_idle => grp_awgn_real3_fu_554_ap_idle,
        ap_ready => grp_awgn_real3_fu_554_ap_ready,
        ap_ce => grp_awgn_real3_fu_554_ap_ce,
        snr_V => awgn_snr_V_reg_2119,
        ap_return => grp_awgn_real3_fu_554_ap_return);

    grp_awgn_imag3_fu_567 : component awgn_imag3
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_awgn_imag3_fu_567_ap_start,
        ap_done => grp_awgn_imag3_fu_567_ap_done,
        ap_idle => grp_awgn_imag3_fu_567_ap_idle,
        ap_ready => grp_awgn_imag3_fu_567_ap_ready,
        ap_ce => grp_awgn_imag3_fu_567_ap_ce,
        snr_V => awgn_snr_V_reg_2119,
        ap_return => grp_awgn_imag3_fu_567_ap_return);

    grp_awgn_real4_fu_580 : component awgn_real4
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_awgn_real4_fu_580_ap_start,
        ap_done => grp_awgn_real4_fu_580_ap_done,
        ap_idle => grp_awgn_real4_fu_580_ap_idle,
        ap_ready => grp_awgn_real4_fu_580_ap_ready,
        ap_ce => grp_awgn_real4_fu_580_ap_ce,
        snr_V => awgn_snr_V_reg_2119,
        ap_return => grp_awgn_real4_fu_580_ap_return);

    grp_awgn_imag4_fu_593 : component awgn_imag4
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_awgn_imag4_fu_593_ap_start,
        ap_done => grp_awgn_imag4_fu_593_ap_done,
        ap_idle => grp_awgn_imag4_fu_593_ap_idle,
        ap_ready => grp_awgn_imag4_fu_593_ap_ready,
        ap_ce => grp_awgn_imag4_fu_593_ap_ce,
        snr_V => awgn_snr_V_reg_2119,
        ap_return => grp_awgn_imag4_fu_593_ap_return);

    mod_and_chan_4x_mFfa_U54 : component mod_and_chan_4x_mFfa
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 6,
        din1_WIDTH => 6,
        din2_WIDTH => 6,
        din3_WIDTH => 6,
        din4_WIDTH => 6,
        din5_WIDTH => 6,
        din6_WIDTH => 6,
        din7_WIDTH => 6,
        din8_WIDTH => 3,
        dout_WIDTH => 6)
    port map (
        din0 => ap_const_lv6_4,
        din1 => ap_const_lv6_8,
        din2 => ap_const_lv6_C,
        din3 => ap_const_lv6_18,
        din4 => ap_const_lv6_0,
        din5 => ap_const_lv6_0,
        din6 => ap_const_lv6_0,
        din7 => ap_const_lv6_0,
        din8 => ctrl_mod_type_V_reg_2023,
        dout => p_2_fu_813_p10);

    mod_and_chan_4x_mGfk_U55 : component mod_and_chan_4x_mGfk
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 16,
        din3_WIDTH => 16,
        din4_WIDTH => 2,
        dout_WIDTH => 16)
    port map (
        din0 => ap_const_lv16_2D41,
        din1 => ap_const_lv16_D2BE,
        din2 => ap_const_lv16_2D41,
        din3 => ap_const_lv16_D2BE,
        din4 => tmp_17_reg_2302,
        dout => channel_data_M_real_1_fu_1334_p6);

    mod_and_chan_4x_mGfk_U56 : component mod_and_chan_4x_mGfk
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 16,
        din3_WIDTH => 16,
        din4_WIDTH => 2,
        dout_WIDTH => 16)
    port map (
        din0 => ap_const_lv16_2D41,
        din1 => ap_const_lv16_2D41,
        din2 => ap_const_lv16_D2BE,
        din3 => ap_const_lv16_D2BE,
        din4 => tmp_17_reg_2302,
        dout => channel_data_M_imag_fu_1347_p6);

    mod_and_chan_4x_mGfk_U57 : component mod_and_chan_4x_mGfk
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 16,
        din3_WIDTH => 16,
        din4_WIDTH => 2,
        dout_WIDTH => 16)
    port map (
        din0 => ap_const_lv16_2D41,
        din1 => ap_const_lv16_D2BE,
        din2 => ap_const_lv16_2D41,
        din3 => ap_const_lv16_D2BE,
        din4 => tmp_20_reg_2254_pp0_iter14_reg,
        dout => channel_data_M_real_7_fu_1417_p6);

    mod_and_chan_4x_mGfk_U58 : component mod_and_chan_4x_mGfk
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 16,
        din3_WIDTH => 16,
        din4_WIDTH => 2,
        dout_WIDTH => 16)
    port map (
        din0 => ap_const_lv16_2D41,
        din1 => ap_const_lv16_2D41,
        din2 => ap_const_lv16_D2BE,
        din3 => ap_const_lv16_D2BE,
        din4 => tmp_20_reg_2254_pp0_iter14_reg,
        dout => channel_data_M_imag_5_fu_1430_p6);

    mod_and_chan_4x_mGfk_U59 : component mod_and_chan_4x_mGfk
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 16,
        din3_WIDTH => 16,
        din4_WIDTH => 2,
        dout_WIDTH => 16)
    port map (
        din0 => ap_const_lv16_2D41,
        din1 => ap_const_lv16_D2BE,
        din2 => ap_const_lv16_2D41,
        din3 => ap_const_lv16_D2BE,
        din4 => tmp_23_reg_2270_pp0_iter14_reg,
        dout => channel_data_M_real_12_fu_1500_p6);

    mod_and_chan_4x_mGfk_U60 : component mod_and_chan_4x_mGfk
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 16,
        din3_WIDTH => 16,
        din4_WIDTH => 2,
        dout_WIDTH => 16)
    port map (
        din0 => ap_const_lv16_2D41,
        din1 => ap_const_lv16_2D41,
        din2 => ap_const_lv16_D2BE,
        din3 => ap_const_lv16_D2BE,
        din4 => tmp_23_reg_2270_pp0_iter14_reg,
        dout => channel_data_M_imag_9_fu_1513_p6);

    mod_and_chan_4x_mGfk_U61 : component mod_and_chan_4x_mGfk
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 16,
        din3_WIDTH => 16,
        din4_WIDTH => 2,
        dout_WIDTH => 16)
    port map (
        din0 => ap_const_lv16_2D41,
        din1 => ap_const_lv16_D2BE,
        din2 => ap_const_lv16_2D41,
        din3 => ap_const_lv16_D2BE,
        din4 => tmp_26_reg_2286_pp0_iter14_reg,
        dout => channel_data_M_real_17_fu_1583_p6);

    mod_and_chan_4x_mGfk_U62 : component mod_and_chan_4x_mGfk
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 16,
        din3_WIDTH => 16,
        din4_WIDTH => 2,
        dout_WIDTH => 16)
    port map (
        din0 => ap_const_lv16_2D41,
        din1 => ap_const_lv16_2D41,
        din2 => ap_const_lv16_D2BE,
        din3 => ap_const_lv16_D2BE,
        din4 => tmp_26_reg_2286_pp0_iter14_reg,
        dout => channel_data_M_imag_13_fu_1596_p6);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state5))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then
                    if ((ap_const_logic_1 = ap_condition_pp0_exit_iter0_state5)) then 
                        ap_enable_reg_pp0_iter1 <= (ap_const_logic_1 xor ap_condition_pp0_exit_iter0_state5);
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter10_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter10 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter11_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter11 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter12_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter12 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter13_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter13 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter14_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter14 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter15_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter15 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter16_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter16 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter16 <= ap_enable_reg_pp0_iter15;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter17_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter17 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter17 <= ap_enable_reg_pp0_iter16;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
                    ap_enable_reg_pp0_iter17 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter6 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter7 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter8 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter9_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter9 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
                end if; 
            end if;
        end if;
    end process;


    chan_data_1_V_1_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                chan_data_1_V_1_sel_rd <= ap_const_logic_0;
            else
                if (((chan_data_1_V_1_ack_out = ap_const_logic_1) and (chan_data_1_V_1_vld_out = ap_const_logic_1))) then 
                                        chan_data_1_V_1_sel_rd <= not(chan_data_1_V_1_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    chan_data_1_V_1_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                chan_data_1_V_1_sel_wr <= ap_const_logic_0;
            else
                if (((chan_data_1_V_1_ack_in = ap_const_logic_1) and (chan_data_1_V_1_vld_in = ap_const_logic_1))) then 
                                        chan_data_1_V_1_sel_wr <= not(chan_data_1_V_1_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    chan_data_1_V_1_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                chan_data_1_V_1_state <= ap_const_lv2_0;
            else
                if ((((chan_data_1_V_1_state = ap_const_lv2_2) and (chan_data_1_V_1_vld_in = ap_const_logic_0)) or ((chan_data_1_V_1_state = ap_const_lv2_3) and (chan_data_1_V_1_vld_in = ap_const_logic_0) and (chan_data_1_V_1_ack_out = ap_const_logic_1)))) then 
                    chan_data_1_V_1_state <= ap_const_lv2_2;
                elsif ((((chan_data_1_V_1_state = ap_const_lv2_1) and (chan_data_1_V_1_ack_out = ap_const_logic_0)) or ((chan_data_1_V_1_state = ap_const_lv2_3) and (chan_data_1_V_1_ack_out = ap_const_logic_0) and (chan_data_1_V_1_vld_in = ap_const_logic_1)))) then 
                    chan_data_1_V_1_state <= ap_const_lv2_1;
                elsif (((not(((chan_data_1_V_1_vld_in = ap_const_logic_0) and (chan_data_1_V_1_ack_out = ap_const_logic_1))) and not(((chan_data_1_V_1_ack_out = ap_const_logic_0) and (chan_data_1_V_1_vld_in = ap_const_logic_1))) and (chan_data_1_V_1_state = ap_const_lv2_3)) or ((chan_data_1_V_1_state = ap_const_lv2_1) and (chan_data_1_V_1_ack_out = ap_const_logic_1)) or ((chan_data_1_V_1_state = ap_const_lv2_2) and (chan_data_1_V_1_vld_in = ap_const_logic_1)))) then 
                    chan_data_1_V_1_state <= ap_const_lv2_3;
                else 
                    chan_data_1_V_1_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    chan_data_2_V_1_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                chan_data_2_V_1_sel_rd <= ap_const_logic_0;
            else
                if (((chan_data_2_V_1_ack_out = ap_const_logic_1) and (chan_data_2_V_1_vld_out = ap_const_logic_1))) then 
                                        chan_data_2_V_1_sel_rd <= not(chan_data_2_V_1_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    chan_data_2_V_1_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                chan_data_2_V_1_sel_wr <= ap_const_logic_0;
            else
                if (((chan_data_2_V_1_ack_in = ap_const_logic_1) and (chan_data_2_V_1_vld_in = ap_const_logic_1))) then 
                                        chan_data_2_V_1_sel_wr <= not(chan_data_2_V_1_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    chan_data_2_V_1_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                chan_data_2_V_1_state <= ap_const_lv2_0;
            else
                if ((((chan_data_2_V_1_state = ap_const_lv2_2) and (chan_data_2_V_1_vld_in = ap_const_logic_0)) or ((chan_data_2_V_1_state = ap_const_lv2_3) and (chan_data_2_V_1_vld_in = ap_const_logic_0) and (chan_data_2_V_1_ack_out = ap_const_logic_1)))) then 
                    chan_data_2_V_1_state <= ap_const_lv2_2;
                elsif ((((chan_data_2_V_1_state = ap_const_lv2_1) and (chan_data_2_V_1_ack_out = ap_const_logic_0)) or ((chan_data_2_V_1_state = ap_const_lv2_3) and (chan_data_2_V_1_ack_out = ap_const_logic_0) and (chan_data_2_V_1_vld_in = ap_const_logic_1)))) then 
                    chan_data_2_V_1_state <= ap_const_lv2_1;
                elsif (((not(((chan_data_2_V_1_vld_in = ap_const_logic_0) and (chan_data_2_V_1_ack_out = ap_const_logic_1))) and not(((chan_data_2_V_1_ack_out = ap_const_logic_0) and (chan_data_2_V_1_vld_in = ap_const_logic_1))) and (chan_data_2_V_1_state = ap_const_lv2_3)) or ((chan_data_2_V_1_state = ap_const_lv2_1) and (chan_data_2_V_1_ack_out = ap_const_logic_1)) or ((chan_data_2_V_1_state = ap_const_lv2_2) and (chan_data_2_V_1_vld_in = ap_const_logic_1)))) then 
                    chan_data_2_V_1_state <= ap_const_lv2_3;
                else 
                    chan_data_2_V_1_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    chan_data_3_V_1_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                chan_data_3_V_1_sel_rd <= ap_const_logic_0;
            else
                if (((chan_data_3_V_1_ack_out = ap_const_logic_1) and (chan_data_3_V_1_vld_out = ap_const_logic_1))) then 
                                        chan_data_3_V_1_sel_rd <= not(chan_data_3_V_1_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    chan_data_3_V_1_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                chan_data_3_V_1_sel_wr <= ap_const_logic_0;
            else
                if (((chan_data_3_V_1_ack_in = ap_const_logic_1) and (chan_data_3_V_1_vld_in = ap_const_logic_1))) then 
                                        chan_data_3_V_1_sel_wr <= not(chan_data_3_V_1_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    chan_data_3_V_1_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                chan_data_3_V_1_state <= ap_const_lv2_0;
            else
                if ((((chan_data_3_V_1_state = ap_const_lv2_2) and (chan_data_3_V_1_vld_in = ap_const_logic_0)) or ((chan_data_3_V_1_state = ap_const_lv2_3) and (chan_data_3_V_1_vld_in = ap_const_logic_0) and (chan_data_3_V_1_ack_out = ap_const_logic_1)))) then 
                    chan_data_3_V_1_state <= ap_const_lv2_2;
                elsif ((((chan_data_3_V_1_state = ap_const_lv2_1) and (chan_data_3_V_1_ack_out = ap_const_logic_0)) or ((chan_data_3_V_1_state = ap_const_lv2_3) and (chan_data_3_V_1_ack_out = ap_const_logic_0) and (chan_data_3_V_1_vld_in = ap_const_logic_1)))) then 
                    chan_data_3_V_1_state <= ap_const_lv2_1;
                elsif (((not(((chan_data_3_V_1_vld_in = ap_const_logic_0) and (chan_data_3_V_1_ack_out = ap_const_logic_1))) and not(((chan_data_3_V_1_ack_out = ap_const_logic_0) and (chan_data_3_V_1_vld_in = ap_const_logic_1))) and (chan_data_3_V_1_state = ap_const_lv2_3)) or ((chan_data_3_V_1_state = ap_const_lv2_1) and (chan_data_3_V_1_ack_out = ap_const_logic_1)) or ((chan_data_3_V_1_state = ap_const_lv2_2) and (chan_data_3_V_1_vld_in = ap_const_logic_1)))) then 
                    chan_data_3_V_1_state <= ap_const_lv2_3;
                else 
                    chan_data_3_V_1_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    chan_data_4_V_1_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                chan_data_4_V_1_sel_rd <= ap_const_logic_0;
            else
                if (((chan_data_4_V_1_ack_out = ap_const_logic_1) and (chan_data_4_V_1_vld_out = ap_const_logic_1))) then 
                                        chan_data_4_V_1_sel_rd <= not(chan_data_4_V_1_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    chan_data_4_V_1_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                chan_data_4_V_1_sel_wr <= ap_const_logic_0;
            else
                if (((chan_data_4_V_1_ack_in = ap_const_logic_1) and (chan_data_4_V_1_vld_in = ap_const_logic_1))) then 
                                        chan_data_4_V_1_sel_wr <= not(chan_data_4_V_1_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    chan_data_4_V_1_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                chan_data_4_V_1_state <= ap_const_lv2_0;
            else
                if ((((chan_data_4_V_1_state = ap_const_lv2_2) and (chan_data_4_V_1_vld_in = ap_const_logic_0)) or ((chan_data_4_V_1_state = ap_const_lv2_3) and (chan_data_4_V_1_vld_in = ap_const_logic_0) and (chan_data_4_V_1_ack_out = ap_const_logic_1)))) then 
                    chan_data_4_V_1_state <= ap_const_lv2_2;
                elsif ((((chan_data_4_V_1_state = ap_const_lv2_1) and (chan_data_4_V_1_ack_out = ap_const_logic_0)) or ((chan_data_4_V_1_state = ap_const_lv2_3) and (chan_data_4_V_1_ack_out = ap_const_logic_0) and (chan_data_4_V_1_vld_in = ap_const_logic_1)))) then 
                    chan_data_4_V_1_state <= ap_const_lv2_1;
                elsif (((not(((chan_data_4_V_1_vld_in = ap_const_logic_0) and (chan_data_4_V_1_ack_out = ap_const_logic_1))) and not(((chan_data_4_V_1_ack_out = ap_const_logic_0) and (chan_data_4_V_1_vld_in = ap_const_logic_1))) and (chan_data_4_V_1_state = ap_const_lv2_3)) or ((chan_data_4_V_1_state = ap_const_lv2_1) and (chan_data_4_V_1_ack_out = ap_const_logic_1)) or ((chan_data_4_V_1_state = ap_const_lv2_2) and (chan_data_4_V_1_vld_in = ap_const_logic_1)))) then 
                    chan_data_4_V_1_state <= ap_const_lv2_3;
                else 
                    chan_data_4_V_1_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    ctrl_in_V_0_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ctrl_in_V_0_sel_rd <= ap_const_logic_0;
            else
                if (((ctrl_in_V_0_ack_out = ap_const_logic_1) and (ctrl_in_V_0_vld_out = ap_const_logic_1))) then 
                                        ctrl_in_V_0_sel_rd <= not(ctrl_in_V_0_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    ctrl_in_V_0_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ctrl_in_V_0_sel_wr <= ap_const_logic_0;
            else
                if (((ctrl_in_V_0_ack_in = ap_const_logic_1) and (ctrl_in_V_0_vld_in = ap_const_logic_1))) then 
                                        ctrl_in_V_0_sel_wr <= not(ctrl_in_V_0_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    ctrl_in_V_0_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ctrl_in_V_0_state <= ap_const_lv2_0;
            else
                if ((((ctrl_in_V_0_state = ap_const_lv2_2) and (ctrl_in_V_0_vld_in = ap_const_logic_0)) or ((ctrl_in_V_0_state = ap_const_lv2_3) and (ctrl_in_V_0_vld_in = ap_const_logic_0) and (ctrl_in_V_0_ack_out = ap_const_logic_1)))) then 
                    ctrl_in_V_0_state <= ap_const_lv2_2;
                elsif ((((ctrl_in_V_0_state = ap_const_lv2_1) and (ctrl_in_V_0_ack_out = ap_const_logic_0)) or ((ctrl_in_V_0_state = ap_const_lv2_3) and (ctrl_in_V_0_ack_out = ap_const_logic_0) and (ctrl_in_V_0_vld_in = ap_const_logic_1)))) then 
                    ctrl_in_V_0_state <= ap_const_lv2_1;
                elsif (((not(((ctrl_in_V_0_vld_in = ap_const_logic_0) and (ctrl_in_V_0_ack_out = ap_const_logic_1))) and not(((ctrl_in_V_0_ack_out = ap_const_logic_0) and (ctrl_in_V_0_vld_in = ap_const_logic_1))) and (ctrl_in_V_0_state = ap_const_lv2_3)) or ((ctrl_in_V_0_state = ap_const_lv2_1) and (ctrl_in_V_0_ack_out = ap_const_logic_1)) or ((ctrl_in_V_0_state = ap_const_lv2_2) and (ctrl_in_V_0_vld_in = ap_const_logic_1)))) then 
                    ctrl_in_V_0_state <= ap_const_lv2_3;
                else 
                    ctrl_in_V_0_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    ctrl_out_V_1_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ctrl_out_V_1_sel_rd <= ap_const_logic_0;
            else
                if (((ctrl_out_V_1_ack_out = ap_const_logic_1) and (ctrl_out_V_1_vld_out = ap_const_logic_1))) then 
                                        ctrl_out_V_1_sel_rd <= not(ctrl_out_V_1_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    ctrl_out_V_1_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ctrl_out_V_1_sel_wr <= ap_const_logic_0;
            else
                if (((ctrl_out_V_1_ack_in = ap_const_logic_1) and (ctrl_out_V_1_vld_in = ap_const_logic_1))) then 
                                        ctrl_out_V_1_sel_wr <= not(ctrl_out_V_1_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    ctrl_out_V_1_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ctrl_out_V_1_state <= ap_const_lv2_0;
            else
                if ((((ctrl_out_V_1_state = ap_const_lv2_2) and (ctrl_out_V_1_vld_in = ap_const_logic_0)) or ((ctrl_out_V_1_state = ap_const_lv2_3) and (ctrl_out_V_1_vld_in = ap_const_logic_0) and (ctrl_out_V_1_ack_out = ap_const_logic_1)))) then 
                    ctrl_out_V_1_state <= ap_const_lv2_2;
                elsif ((((ctrl_out_V_1_state = ap_const_lv2_1) and (ctrl_out_V_1_ack_out = ap_const_logic_0)) or ((ctrl_out_V_1_state = ap_const_lv2_3) and (ctrl_out_V_1_ack_out = ap_const_logic_0) and (ctrl_out_V_1_vld_in = ap_const_logic_1)))) then 
                    ctrl_out_V_1_state <= ap_const_lv2_1;
                elsif (((not(((ctrl_out_V_1_vld_in = ap_const_logic_0) and (ctrl_out_V_1_ack_out = ap_const_logic_1))) and not(((ctrl_out_V_1_ack_out = ap_const_logic_0) and (ctrl_out_V_1_vld_in = ap_const_logic_1))) and (ctrl_out_V_1_state = ap_const_lv2_3)) or ((ctrl_out_V_1_state = ap_const_lv2_1) and (ctrl_out_V_1_ack_out = ap_const_logic_1)) or ((ctrl_out_V_1_state = ap_const_lv2_2) and (ctrl_out_V_1_vld_in = ap_const_logic_1)))) then 
                    ctrl_out_V_1_state <= ap_const_lv2_3;
                else 
                    ctrl_out_V_1_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    grp_awgn_imag1_fu_515_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_awgn_imag1_fu_515_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_9_fu_968_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    grp_awgn_imag1_fu_515_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_awgn_imag1_fu_515_ap_ready = ap_const_logic_1)) then 
                    grp_awgn_imag1_fu_515_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_awgn_imag2_fu_541_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_awgn_imag2_fu_541_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_9_fu_968_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    grp_awgn_imag2_fu_541_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_awgn_imag2_fu_541_ap_ready = ap_const_logic_1)) then 
                    grp_awgn_imag2_fu_541_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_awgn_imag3_fu_567_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_awgn_imag3_fu_567_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_9_fu_968_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    grp_awgn_imag3_fu_567_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_awgn_imag3_fu_567_ap_ready = ap_const_logic_1)) then 
                    grp_awgn_imag3_fu_567_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_awgn_imag4_fu_593_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_awgn_imag4_fu_593_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_9_fu_968_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    grp_awgn_imag4_fu_593_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_awgn_imag4_fu_593_ap_ready = ap_const_logic_1)) then 
                    grp_awgn_imag4_fu_593_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_awgn_real1_fu_502_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_awgn_real1_fu_502_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_9_fu_968_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    grp_awgn_real1_fu_502_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_awgn_real1_fu_502_ap_ready = ap_const_logic_1)) then 
                    grp_awgn_real1_fu_502_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_awgn_real2_fu_528_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_awgn_real2_fu_528_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_9_fu_968_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    grp_awgn_real2_fu_528_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_awgn_real2_fu_528_ap_ready = ap_const_logic_1)) then 
                    grp_awgn_real2_fu_528_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_awgn_real3_fu_554_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_awgn_real3_fu_554_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_9_fu_968_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    grp_awgn_real3_fu_554_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_awgn_real3_fu_554_ap_ready = ap_const_logic_1)) then 
                    grp_awgn_real3_fu_554_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_awgn_real4_fu_580_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_awgn_real4_fu_580_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_9_fu_968_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    grp_awgn_real4_fu_580_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_awgn_real4_fu_580_ap_ready = ap_const_logic_1)) then 
                    grp_awgn_real4_fu_580_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    hard_data_V_V_0_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                hard_data_V_V_0_sel_rd <= ap_const_logic_0;
            else
                if (((hard_data_V_V_0_ack_out = ap_const_logic_1) and (hard_data_V_V_0_vld_out = ap_const_logic_1))) then 
                                        hard_data_V_V_0_sel_rd <= not(hard_data_V_V_0_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    hard_data_V_V_0_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                hard_data_V_V_0_sel_wr <= ap_const_logic_0;
            else
                if (((hard_data_V_V_0_ack_in = ap_const_logic_1) and (hard_data_V_V_0_vld_in = ap_const_logic_1))) then 
                                        hard_data_V_V_0_sel_wr <= not(hard_data_V_V_0_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    hard_data_V_V_0_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                hard_data_V_V_0_state <= ap_const_lv2_0;
            else
                if ((((hard_data_V_V_0_state = ap_const_lv2_2) and (hard_data_V_V_0_vld_in = ap_const_logic_0)) or ((hard_data_V_V_0_state = ap_const_lv2_3) and (hard_data_V_V_0_vld_in = ap_const_logic_0) and (hard_data_V_V_0_ack_out = ap_const_logic_1)))) then 
                    hard_data_V_V_0_state <= ap_const_lv2_2;
                elsif ((((hard_data_V_V_0_state = ap_const_lv2_1) and (hard_data_V_V_0_ack_out = ap_const_logic_0)) or ((hard_data_V_V_0_state = ap_const_lv2_3) and (hard_data_V_V_0_ack_out = ap_const_logic_0) and (hard_data_V_V_0_vld_in = ap_const_logic_1)))) then 
                    hard_data_V_V_0_state <= ap_const_lv2_1;
                elsif (((not(((hard_data_V_V_0_vld_in = ap_const_logic_0) and (hard_data_V_V_0_ack_out = ap_const_logic_1))) and not(((hard_data_V_V_0_ack_out = ap_const_logic_0) and (hard_data_V_V_0_vld_in = ap_const_logic_1))) and (hard_data_V_V_0_state = ap_const_lv2_3)) or ((hard_data_V_V_0_state = ap_const_lv2_1) and (hard_data_V_V_0_ack_out = ap_const_logic_1)) or ((hard_data_V_V_0_state = ap_const_lv2_2) and (hard_data_V_V_0_vld_in = ap_const_logic_1)))) then 
                    hard_data_V_V_0_state <= ap_const_lv2_3;
                else 
                    hard_data_V_V_0_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    ap_phi_reg_pp0_iter2_p_Val2_5_reg_492_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_1129)) then
                if (((tmp_10_reg_2207 = ap_const_lv1_1) and (tmp_9_reg_2203 = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter2_p_Val2_5_reg_492 <= hard_data_V_V_0_data_out;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter2_p_Val2_5_reg_492 <= ap_phi_reg_pp0_iter1_p_Val2_5_reg_492;
                end if;
            end if; 
        end if;
    end process;

    remaining_bits_fu_240_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_10_fu_977_p2 = ap_const_lv1_1) and (tmp_9_fu_968_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                remaining_bits_fu_240 <= remaining_bits_1_fu_992_p2;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_10_fu_977_p2 = ap_const_lv1_0) and (tmp_9_fu_968_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                remaining_bits_fu_240 <= remaining_bits_2_fu_982_p2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
                remaining_bits_fu_240 <= ap_const_lv8_0;
            end if; 
        end if;
    end process;

    symbols_reg_483_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_9_fu_968_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                symbols_reg_483 <= symbols_V_1_fu_1002_p2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
                symbols_reg_483 <= ctrl_block_symbls_V_reg_2049;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                ap_phi_reg_pp0_iter1_p_Val2_5_reg_492 <= ap_phi_reg_pp0_iter0_p_Val2_5_reg_492;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then
                awgn_snr_V_reg_2119 <= awgn_snr_V_fu_918_p3;
                sel_tmp5_reg_2155 <= sel_tmp5_fu_953_p2;
                sel_tmp7_reg_2171 <= sel_tmp7_fu_958_p2;
                sel_tmp9_reg_2187 <= sel_tmp9_fu_963_p2;
                sel_tmp_reg_2147 <= sel_tmp_fu_948_p2;
                    sh_assign_cast_reg_2107(1 downto 0) <= sh_assign_cast_fu_834_p1(1 downto 0);
                    tmp_13_cast_reg_2131(5 downto 0) <= tmp_13_cast_fu_926_p1(5 downto 0);
                    tmp_20_cast_reg_2142(6 downto 0) <= tmp_20_cast_fu_944_p1(6 downto 0);
                    tmp_5_reg_2137(5 downto 0) <= tmp_5_fu_934_p1(5 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ctrl_out_V_1_ack_in = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                carry_reg_2095 <= carry_fu_797_p2;
                p_Result_4_reg_2101 <= snr_mod_V_fu_734_p2(16 downto 15);
                p_Val2_4_reg_2089 <= p_Val2_4_fu_777_p2;
                sh_assign_reg_2077 <= sh_assign_fu_727_p3;
                signbit_reg_2082 <= snr_mod_V_fu_734_p2(16 downto 16);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((chan_data_1_V_1_load_A = ap_const_logic_1)) then
                chan_data_1_V_1_payload_A <= cast1_fu_1947_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((chan_data_1_V_1_load_B = ap_const_logic_1)) then
                chan_data_1_V_1_payload_B <= cast1_fu_1947_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((chan_data_2_V_1_load_A = ap_const_logic_1)) then
                chan_data_2_V_1_payload_A <= cast2_fu_1960_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((chan_data_2_V_1_load_B = ap_const_logic_1)) then
                chan_data_2_V_1_payload_B <= cast2_fu_1960_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((chan_data_3_V_1_load_A = ap_const_logic_1)) then
                chan_data_3_V_1_payload_A <= cast3_fu_1973_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((chan_data_3_V_1_load_B = ap_const_logic_1)) then
                chan_data_3_V_1_payload_B <= cast3_fu_1973_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((chan_data_4_V_1_load_A = ap_const_logic_1)) then
                chan_data_4_V_1_payload_A <= cast4_fu_1986_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((chan_data_4_V_1_load_B = ap_const_logic_1)) then
                chan_data_4_V_1_payload_B <= cast4_fu_1986_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ctrl_out_V_1_ack_in = ap_const_logic_0) or (ctrl_in_V_0_vld_out = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                ctrl_block_symbls_V_reg_2049 <= ctrl_in_V_0_data_out(52 downto 39);
                ctrl_mod_type_V_reg_2023 <= ctrl_in_V_0_data_out(3 downto 1);
                ctrl_skip_chan_V_reg_2032 <= ctrl_in_V_0_data_out(4 downto 4);
                ctrl_snr_V_reg_2044 <= ctrl_in_V_0_data_out(21 downto 5);
                or_cond_reg_2071 <= or_cond_fu_690_p2;
                sel_tmp2_reg_2065 <= sel_tmp2_fu_684_p2;
                tmp_8_reg_2059 <= tmp_8_fu_672_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ctrl_in_V_0_load_A = ap_const_logic_1)) then
                ctrl_in_V_0_payload_A <= ctrl_in_V_TDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ctrl_in_V_0_load_B = ap_const_logic_1)) then
                ctrl_in_V_0_payload_B <= ctrl_in_V_TDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ctrl_out_V_1_load_A = ap_const_logic_1)) then
                ctrl_out_V_1_payload_A <= tmp_1_cast_fu_653_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ctrl_out_V_1_load_B = ap_const_logic_1)) then
                ctrl_out_V_1_payload_B <= tmp_1_cast_fu_653_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((hard_data_V_V_0_load_A = ap_const_logic_1)) then
                hard_data_V_V_0_payload_A <= hard_data_V_V_TDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((hard_data_V_V_0_load_B = ap_const_logic_1)) then
                hard_data_V_V_0_payload_B <= hard_data_V_V_TDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_9_reg_2203_pp0_iter2_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then
                p_3_reg_471 <= r_V_reg_2244;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_9_reg_2203_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then
                p_Result_1_fu_228 <= symbol_3_V_10_fu_1150_p3;
                p_Result_2_fu_232 <= symbol_2_V_8_fu_1122_p3;
                p_Result_s_fu_224 <= p_Val2_38_fu_1178_p3;
                r_V_reg_2244 <= r_V_fu_1185_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_9_reg_2203_pp0_iter13_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1))) then
                p_Result_3_fu_236 <= symbol_1_V_5_fu_1262_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_9_reg_2203_pp0_iter14_reg = ap_const_lv1_0))) then
                p_Val2_21_reg_2393 <= p_Val2_21_fu_1403_p3;
                p_Val2_22_reg_2398 <= p_Val2_22_fu_1465_p3;
                p_Val2_23_reg_2403 <= p_Val2_23_fu_1486_p3;
                p_Val2_24_reg_2408 <= p_Val2_24_fu_1548_p3;
                p_Val2_25_reg_2413 <= p_Val2_25_fu_1569_p3;
                p_Val2_26_reg_2418 <= p_Val2_26_fu_1631_p3;
                p_Val2_27_reg_2423 <= p_Val2_27_fu_1652_p3;
                p_Val2_37_reg_2388 <= p_Val2_37_fu_1382_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_9_reg_2203_pp0_iter1_reg = ap_const_lv1_0))) then
                p_Val2_38_reg_2239 <= p_Val2_38_fu_1178_p3;
                symbol_1_V_reg_2221 <= symbol_1_V_fu_1017_p1;
                symbol_2_V_8_reg_2229 <= symbol_2_V_8_fu_1122_p3;
                symbol_3_V_10_reg_2234 <= symbol_3_V_10_fu_1150_p3;
                tmp_19_reg_2249 <= tmp_19_fu_1190_p1;
                tmp_20_reg_2254 <= tmp_20_fu_1194_p1;
                tmp_21_reg_2260 <= tmp_21_fu_1198_p1;
                tmp_22_reg_2265 <= tmp_22_fu_1202_p1;
                tmp_23_reg_2270 <= tmp_23_fu_1206_p1;
                tmp_24_reg_2276 <= tmp_24_fu_1210_p1;
                tmp_25_reg_2281 <= tmp_25_fu_1214_p1;
                tmp_26_reg_2286 <= tmp_26_fu_1218_p1;
                tmp_27_reg_2292 <= tmp_27_fu_1222_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                p_Val2_38_reg_2239_pp0_iter10_reg <= p_Val2_38_reg_2239_pp0_iter9_reg;
                p_Val2_38_reg_2239_pp0_iter11_reg <= p_Val2_38_reg_2239_pp0_iter10_reg;
                p_Val2_38_reg_2239_pp0_iter12_reg <= p_Val2_38_reg_2239_pp0_iter11_reg;
                p_Val2_38_reg_2239_pp0_iter13_reg <= p_Val2_38_reg_2239_pp0_iter12_reg;
                p_Val2_38_reg_2239_pp0_iter3_reg <= p_Val2_38_reg_2239;
                p_Val2_38_reg_2239_pp0_iter4_reg <= p_Val2_38_reg_2239_pp0_iter3_reg;
                p_Val2_38_reg_2239_pp0_iter5_reg <= p_Val2_38_reg_2239_pp0_iter4_reg;
                p_Val2_38_reg_2239_pp0_iter6_reg <= p_Val2_38_reg_2239_pp0_iter5_reg;
                p_Val2_38_reg_2239_pp0_iter7_reg <= p_Val2_38_reg_2239_pp0_iter6_reg;
                p_Val2_38_reg_2239_pp0_iter8_reg <= p_Val2_38_reg_2239_pp0_iter7_reg;
                p_Val2_38_reg_2239_pp0_iter9_reg <= p_Val2_38_reg_2239_pp0_iter8_reg;
                symbol_1_V_reg_2221_pp0_iter10_reg <= symbol_1_V_reg_2221_pp0_iter9_reg;
                symbol_1_V_reg_2221_pp0_iter11_reg <= symbol_1_V_reg_2221_pp0_iter10_reg;
                symbol_1_V_reg_2221_pp0_iter12_reg <= symbol_1_V_reg_2221_pp0_iter11_reg;
                symbol_1_V_reg_2221_pp0_iter13_reg <= symbol_1_V_reg_2221_pp0_iter12_reg;
                symbol_1_V_reg_2221_pp0_iter3_reg <= symbol_1_V_reg_2221;
                symbol_1_V_reg_2221_pp0_iter4_reg <= symbol_1_V_reg_2221_pp0_iter3_reg;
                symbol_1_V_reg_2221_pp0_iter5_reg <= symbol_1_V_reg_2221_pp0_iter4_reg;
                symbol_1_V_reg_2221_pp0_iter6_reg <= symbol_1_V_reg_2221_pp0_iter5_reg;
                symbol_1_V_reg_2221_pp0_iter7_reg <= symbol_1_V_reg_2221_pp0_iter6_reg;
                symbol_1_V_reg_2221_pp0_iter8_reg <= symbol_1_V_reg_2221_pp0_iter7_reg;
                symbol_1_V_reg_2221_pp0_iter9_reg <= symbol_1_V_reg_2221_pp0_iter8_reg;
                symbol_2_V_8_reg_2229_pp0_iter10_reg <= symbol_2_V_8_reg_2229_pp0_iter9_reg;
                symbol_2_V_8_reg_2229_pp0_iter11_reg <= symbol_2_V_8_reg_2229_pp0_iter10_reg;
                symbol_2_V_8_reg_2229_pp0_iter12_reg <= symbol_2_V_8_reg_2229_pp0_iter11_reg;
                symbol_2_V_8_reg_2229_pp0_iter13_reg <= symbol_2_V_8_reg_2229_pp0_iter12_reg;
                symbol_2_V_8_reg_2229_pp0_iter3_reg <= symbol_2_V_8_reg_2229;
                symbol_2_V_8_reg_2229_pp0_iter4_reg <= symbol_2_V_8_reg_2229_pp0_iter3_reg;
                symbol_2_V_8_reg_2229_pp0_iter5_reg <= symbol_2_V_8_reg_2229_pp0_iter4_reg;
                symbol_2_V_8_reg_2229_pp0_iter6_reg <= symbol_2_V_8_reg_2229_pp0_iter5_reg;
                symbol_2_V_8_reg_2229_pp0_iter7_reg <= symbol_2_V_8_reg_2229_pp0_iter6_reg;
                symbol_2_V_8_reg_2229_pp0_iter8_reg <= symbol_2_V_8_reg_2229_pp0_iter7_reg;
                symbol_2_V_8_reg_2229_pp0_iter9_reg <= symbol_2_V_8_reg_2229_pp0_iter8_reg;
                symbol_3_V_10_reg_2234_pp0_iter10_reg <= symbol_3_V_10_reg_2234_pp0_iter9_reg;
                symbol_3_V_10_reg_2234_pp0_iter11_reg <= symbol_3_V_10_reg_2234_pp0_iter10_reg;
                symbol_3_V_10_reg_2234_pp0_iter12_reg <= symbol_3_V_10_reg_2234_pp0_iter11_reg;
                symbol_3_V_10_reg_2234_pp0_iter13_reg <= symbol_3_V_10_reg_2234_pp0_iter12_reg;
                symbol_3_V_10_reg_2234_pp0_iter3_reg <= symbol_3_V_10_reg_2234;
                symbol_3_V_10_reg_2234_pp0_iter4_reg <= symbol_3_V_10_reg_2234_pp0_iter3_reg;
                symbol_3_V_10_reg_2234_pp0_iter5_reg <= symbol_3_V_10_reg_2234_pp0_iter4_reg;
                symbol_3_V_10_reg_2234_pp0_iter6_reg <= symbol_3_V_10_reg_2234_pp0_iter5_reg;
                symbol_3_V_10_reg_2234_pp0_iter7_reg <= symbol_3_V_10_reg_2234_pp0_iter6_reg;
                symbol_3_V_10_reg_2234_pp0_iter8_reg <= symbol_3_V_10_reg_2234_pp0_iter7_reg;
                symbol_3_V_10_reg_2234_pp0_iter9_reg <= symbol_3_V_10_reg_2234_pp0_iter8_reg;
                tmp_19_reg_2249_pp0_iter10_reg <= tmp_19_reg_2249_pp0_iter9_reg;
                tmp_19_reg_2249_pp0_iter11_reg <= tmp_19_reg_2249_pp0_iter10_reg;
                tmp_19_reg_2249_pp0_iter12_reg <= tmp_19_reg_2249_pp0_iter11_reg;
                tmp_19_reg_2249_pp0_iter13_reg <= tmp_19_reg_2249_pp0_iter12_reg;
                tmp_19_reg_2249_pp0_iter14_reg <= tmp_19_reg_2249_pp0_iter13_reg;
                tmp_19_reg_2249_pp0_iter3_reg <= tmp_19_reg_2249;
                tmp_19_reg_2249_pp0_iter4_reg <= tmp_19_reg_2249_pp0_iter3_reg;
                tmp_19_reg_2249_pp0_iter5_reg <= tmp_19_reg_2249_pp0_iter4_reg;
                tmp_19_reg_2249_pp0_iter6_reg <= tmp_19_reg_2249_pp0_iter5_reg;
                tmp_19_reg_2249_pp0_iter7_reg <= tmp_19_reg_2249_pp0_iter6_reg;
                tmp_19_reg_2249_pp0_iter8_reg <= tmp_19_reg_2249_pp0_iter7_reg;
                tmp_19_reg_2249_pp0_iter9_reg <= tmp_19_reg_2249_pp0_iter8_reg;
                tmp_20_reg_2254_pp0_iter10_reg <= tmp_20_reg_2254_pp0_iter9_reg;
                tmp_20_reg_2254_pp0_iter11_reg <= tmp_20_reg_2254_pp0_iter10_reg;
                tmp_20_reg_2254_pp0_iter12_reg <= tmp_20_reg_2254_pp0_iter11_reg;
                tmp_20_reg_2254_pp0_iter13_reg <= tmp_20_reg_2254_pp0_iter12_reg;
                tmp_20_reg_2254_pp0_iter14_reg <= tmp_20_reg_2254_pp0_iter13_reg;
                tmp_20_reg_2254_pp0_iter3_reg <= tmp_20_reg_2254;
                tmp_20_reg_2254_pp0_iter4_reg <= tmp_20_reg_2254_pp0_iter3_reg;
                tmp_20_reg_2254_pp0_iter5_reg <= tmp_20_reg_2254_pp0_iter4_reg;
                tmp_20_reg_2254_pp0_iter6_reg <= tmp_20_reg_2254_pp0_iter5_reg;
                tmp_20_reg_2254_pp0_iter7_reg <= tmp_20_reg_2254_pp0_iter6_reg;
                tmp_20_reg_2254_pp0_iter8_reg <= tmp_20_reg_2254_pp0_iter7_reg;
                tmp_20_reg_2254_pp0_iter9_reg <= tmp_20_reg_2254_pp0_iter8_reg;
                tmp_21_reg_2260_pp0_iter10_reg <= tmp_21_reg_2260_pp0_iter9_reg;
                tmp_21_reg_2260_pp0_iter11_reg <= tmp_21_reg_2260_pp0_iter10_reg;
                tmp_21_reg_2260_pp0_iter12_reg <= tmp_21_reg_2260_pp0_iter11_reg;
                tmp_21_reg_2260_pp0_iter13_reg <= tmp_21_reg_2260_pp0_iter12_reg;
                tmp_21_reg_2260_pp0_iter3_reg <= tmp_21_reg_2260;
                tmp_21_reg_2260_pp0_iter4_reg <= tmp_21_reg_2260_pp0_iter3_reg;
                tmp_21_reg_2260_pp0_iter5_reg <= tmp_21_reg_2260_pp0_iter4_reg;
                tmp_21_reg_2260_pp0_iter6_reg <= tmp_21_reg_2260_pp0_iter5_reg;
                tmp_21_reg_2260_pp0_iter7_reg <= tmp_21_reg_2260_pp0_iter6_reg;
                tmp_21_reg_2260_pp0_iter8_reg <= tmp_21_reg_2260_pp0_iter7_reg;
                tmp_21_reg_2260_pp0_iter9_reg <= tmp_21_reg_2260_pp0_iter8_reg;
                tmp_22_reg_2265_pp0_iter10_reg <= tmp_22_reg_2265_pp0_iter9_reg;
                tmp_22_reg_2265_pp0_iter11_reg <= tmp_22_reg_2265_pp0_iter10_reg;
                tmp_22_reg_2265_pp0_iter12_reg <= tmp_22_reg_2265_pp0_iter11_reg;
                tmp_22_reg_2265_pp0_iter13_reg <= tmp_22_reg_2265_pp0_iter12_reg;
                tmp_22_reg_2265_pp0_iter14_reg <= tmp_22_reg_2265_pp0_iter13_reg;
                tmp_22_reg_2265_pp0_iter3_reg <= tmp_22_reg_2265;
                tmp_22_reg_2265_pp0_iter4_reg <= tmp_22_reg_2265_pp0_iter3_reg;
                tmp_22_reg_2265_pp0_iter5_reg <= tmp_22_reg_2265_pp0_iter4_reg;
                tmp_22_reg_2265_pp0_iter6_reg <= tmp_22_reg_2265_pp0_iter5_reg;
                tmp_22_reg_2265_pp0_iter7_reg <= tmp_22_reg_2265_pp0_iter6_reg;
                tmp_22_reg_2265_pp0_iter8_reg <= tmp_22_reg_2265_pp0_iter7_reg;
                tmp_22_reg_2265_pp0_iter9_reg <= tmp_22_reg_2265_pp0_iter8_reg;
                tmp_23_reg_2270_pp0_iter10_reg <= tmp_23_reg_2270_pp0_iter9_reg;
                tmp_23_reg_2270_pp0_iter11_reg <= tmp_23_reg_2270_pp0_iter10_reg;
                tmp_23_reg_2270_pp0_iter12_reg <= tmp_23_reg_2270_pp0_iter11_reg;
                tmp_23_reg_2270_pp0_iter13_reg <= tmp_23_reg_2270_pp0_iter12_reg;
                tmp_23_reg_2270_pp0_iter14_reg <= tmp_23_reg_2270_pp0_iter13_reg;
                tmp_23_reg_2270_pp0_iter3_reg <= tmp_23_reg_2270;
                tmp_23_reg_2270_pp0_iter4_reg <= tmp_23_reg_2270_pp0_iter3_reg;
                tmp_23_reg_2270_pp0_iter5_reg <= tmp_23_reg_2270_pp0_iter4_reg;
                tmp_23_reg_2270_pp0_iter6_reg <= tmp_23_reg_2270_pp0_iter5_reg;
                tmp_23_reg_2270_pp0_iter7_reg <= tmp_23_reg_2270_pp0_iter6_reg;
                tmp_23_reg_2270_pp0_iter8_reg <= tmp_23_reg_2270_pp0_iter7_reg;
                tmp_23_reg_2270_pp0_iter9_reg <= tmp_23_reg_2270_pp0_iter8_reg;
                tmp_24_reg_2276_pp0_iter10_reg <= tmp_24_reg_2276_pp0_iter9_reg;
                tmp_24_reg_2276_pp0_iter11_reg <= tmp_24_reg_2276_pp0_iter10_reg;
                tmp_24_reg_2276_pp0_iter12_reg <= tmp_24_reg_2276_pp0_iter11_reg;
                tmp_24_reg_2276_pp0_iter13_reg <= tmp_24_reg_2276_pp0_iter12_reg;
                tmp_24_reg_2276_pp0_iter3_reg <= tmp_24_reg_2276;
                tmp_24_reg_2276_pp0_iter4_reg <= tmp_24_reg_2276_pp0_iter3_reg;
                tmp_24_reg_2276_pp0_iter5_reg <= tmp_24_reg_2276_pp0_iter4_reg;
                tmp_24_reg_2276_pp0_iter6_reg <= tmp_24_reg_2276_pp0_iter5_reg;
                tmp_24_reg_2276_pp0_iter7_reg <= tmp_24_reg_2276_pp0_iter6_reg;
                tmp_24_reg_2276_pp0_iter8_reg <= tmp_24_reg_2276_pp0_iter7_reg;
                tmp_24_reg_2276_pp0_iter9_reg <= tmp_24_reg_2276_pp0_iter8_reg;
                tmp_25_reg_2281_pp0_iter10_reg <= tmp_25_reg_2281_pp0_iter9_reg;
                tmp_25_reg_2281_pp0_iter11_reg <= tmp_25_reg_2281_pp0_iter10_reg;
                tmp_25_reg_2281_pp0_iter12_reg <= tmp_25_reg_2281_pp0_iter11_reg;
                tmp_25_reg_2281_pp0_iter13_reg <= tmp_25_reg_2281_pp0_iter12_reg;
                tmp_25_reg_2281_pp0_iter14_reg <= tmp_25_reg_2281_pp0_iter13_reg;
                tmp_25_reg_2281_pp0_iter3_reg <= tmp_25_reg_2281;
                tmp_25_reg_2281_pp0_iter4_reg <= tmp_25_reg_2281_pp0_iter3_reg;
                tmp_25_reg_2281_pp0_iter5_reg <= tmp_25_reg_2281_pp0_iter4_reg;
                tmp_25_reg_2281_pp0_iter6_reg <= tmp_25_reg_2281_pp0_iter5_reg;
                tmp_25_reg_2281_pp0_iter7_reg <= tmp_25_reg_2281_pp0_iter6_reg;
                tmp_25_reg_2281_pp0_iter8_reg <= tmp_25_reg_2281_pp0_iter7_reg;
                tmp_25_reg_2281_pp0_iter9_reg <= tmp_25_reg_2281_pp0_iter8_reg;
                tmp_26_reg_2286_pp0_iter10_reg <= tmp_26_reg_2286_pp0_iter9_reg;
                tmp_26_reg_2286_pp0_iter11_reg <= tmp_26_reg_2286_pp0_iter10_reg;
                tmp_26_reg_2286_pp0_iter12_reg <= tmp_26_reg_2286_pp0_iter11_reg;
                tmp_26_reg_2286_pp0_iter13_reg <= tmp_26_reg_2286_pp0_iter12_reg;
                tmp_26_reg_2286_pp0_iter14_reg <= tmp_26_reg_2286_pp0_iter13_reg;
                tmp_26_reg_2286_pp0_iter3_reg <= tmp_26_reg_2286;
                tmp_26_reg_2286_pp0_iter4_reg <= tmp_26_reg_2286_pp0_iter3_reg;
                tmp_26_reg_2286_pp0_iter5_reg <= tmp_26_reg_2286_pp0_iter4_reg;
                tmp_26_reg_2286_pp0_iter6_reg <= tmp_26_reg_2286_pp0_iter5_reg;
                tmp_26_reg_2286_pp0_iter7_reg <= tmp_26_reg_2286_pp0_iter6_reg;
                tmp_26_reg_2286_pp0_iter8_reg <= tmp_26_reg_2286_pp0_iter7_reg;
                tmp_26_reg_2286_pp0_iter9_reg <= tmp_26_reg_2286_pp0_iter8_reg;
                tmp_27_reg_2292_pp0_iter10_reg <= tmp_27_reg_2292_pp0_iter9_reg;
                tmp_27_reg_2292_pp0_iter11_reg <= tmp_27_reg_2292_pp0_iter10_reg;
                tmp_27_reg_2292_pp0_iter12_reg <= tmp_27_reg_2292_pp0_iter11_reg;
                tmp_27_reg_2292_pp0_iter13_reg <= tmp_27_reg_2292_pp0_iter12_reg;
                tmp_27_reg_2292_pp0_iter3_reg <= tmp_27_reg_2292;
                tmp_27_reg_2292_pp0_iter4_reg <= tmp_27_reg_2292_pp0_iter3_reg;
                tmp_27_reg_2292_pp0_iter5_reg <= tmp_27_reg_2292_pp0_iter4_reg;
                tmp_27_reg_2292_pp0_iter6_reg <= tmp_27_reg_2292_pp0_iter5_reg;
                tmp_27_reg_2292_pp0_iter7_reg <= tmp_27_reg_2292_pp0_iter6_reg;
                tmp_27_reg_2292_pp0_iter8_reg <= tmp_27_reg_2292_pp0_iter7_reg;
                tmp_27_reg_2292_pp0_iter9_reg <= tmp_27_reg_2292_pp0_iter8_reg;
                tmp_9_reg_2203_pp0_iter10_reg <= tmp_9_reg_2203_pp0_iter9_reg;
                tmp_9_reg_2203_pp0_iter11_reg <= tmp_9_reg_2203_pp0_iter10_reg;
                tmp_9_reg_2203_pp0_iter12_reg <= tmp_9_reg_2203_pp0_iter11_reg;
                tmp_9_reg_2203_pp0_iter13_reg <= tmp_9_reg_2203_pp0_iter12_reg;
                tmp_9_reg_2203_pp0_iter14_reg <= tmp_9_reg_2203_pp0_iter13_reg;
                tmp_9_reg_2203_pp0_iter15_reg <= tmp_9_reg_2203_pp0_iter14_reg;
                tmp_9_reg_2203_pp0_iter16_reg <= tmp_9_reg_2203_pp0_iter15_reg;
                tmp_9_reg_2203_pp0_iter2_reg <= tmp_9_reg_2203_pp0_iter1_reg;
                tmp_9_reg_2203_pp0_iter3_reg <= tmp_9_reg_2203_pp0_iter2_reg;
                tmp_9_reg_2203_pp0_iter4_reg <= tmp_9_reg_2203_pp0_iter3_reg;
                tmp_9_reg_2203_pp0_iter5_reg <= tmp_9_reg_2203_pp0_iter4_reg;
                tmp_9_reg_2203_pp0_iter6_reg <= tmp_9_reg_2203_pp0_iter5_reg;
                tmp_9_reg_2203_pp0_iter7_reg <= tmp_9_reg_2203_pp0_iter6_reg;
                tmp_9_reg_2203_pp0_iter8_reg <= tmp_9_reg_2203_pp0_iter7_reg;
                tmp_9_reg_2203_pp0_iter9_reg <= tmp_9_reg_2203_pp0_iter8_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_9_fu_968_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                tmp_10_reg_2207 <= tmp_10_fu_977_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                tmp_10_reg_2207_pp0_iter1_reg <= tmp_10_reg_2207;
                tmp_9_reg_2203 <= tmp_9_fu_968_p2;
                tmp_9_reg_2203_pp0_iter1_reg <= tmp_9_reg_2203;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_9_reg_2203_pp0_iter13_reg = ap_const_lv1_0))) then
                tmp_16_reg_2297 <= tmp_16_fu_1268_p1;
                tmp_17_reg_2302 <= tmp_17_fu_1272_p1;
            end if;
        end if;
    end process;
    sh_assign_cast_reg_2107(20 downto 2) <= "0000000000000000000";
    tmp_13_cast_reg_2131(7 downto 6) <= "00";
    tmp_5_reg_2137(95 downto 6) <= "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    tmp_20_cast_reg_2142(7) <= '0';

    ap_NS_fsm_assign_proc : process (ctrl_in_V_0_vld_out, ctrl_out_V_1_ack_in, chan_data_1_V_1_ack_in, chan_data_2_V_1_ack_in, chan_data_3_V_1_ack_in, chan_data_4_V_1_ack_in, ap_CS_fsm, ap_CS_fsm_state2, ap_CS_fsm_state3, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter16, ap_enable_reg_pp0_iter17, tmp_9_fu_968_p2, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone, ap_CS_fsm_state23)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                ap_NS_fsm <= ap_ST_fsm_state2;
            when ap_ST_fsm_state2 => 
                if ((not(((ctrl_out_V_1_ack_in = ap_const_logic_0) or (ctrl_in_V_0_vld_out = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when ap_ST_fsm_state3 => 
                if (((ctrl_out_V_1_ack_in = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (tmp_9_fu_968_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) and not(((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter16 = ap_const_logic_0) and (ap_enable_reg_pp0_iter17 = ap_const_logic_1))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif ((((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (tmp_9_fu_968_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter16 = ap_const_logic_0) and (ap_enable_reg_pp0_iter17 = ap_const_logic_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_state23;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_state23 => 
                if ((not(((ctrl_out_V_1_ack_in = ap_const_logic_0) or (chan_data_4_V_1_ack_in = ap_const_logic_0) or (chan_data_3_V_1_ack_in = ap_const_logic_0) or (chan_data_2_V_1_ack_in = ap_const_logic_0) or (chan_data_1_V_1_ack_in = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state23))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state23;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXX";
        end case;
    end process;
    QAM16_LUT_M_imag_V_address0 <= tmp_4_i_fu_1280_p1(4 - 1 downto 0);
    QAM16_LUT_M_imag_V_address1 <= tmp_1_i_fu_1292_p1(4 - 1 downto 0);
    QAM16_LUT_M_imag_V_address2 <= tmp_7_i_fu_1302_p1(4 - 1 downto 0);
    QAM16_LUT_M_imag_V_address3 <= tmp_3_i_fu_1312_p1(4 - 1 downto 0);

    QAM16_LUT_M_imag_V_ce0_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter14)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1))) then 
            QAM16_LUT_M_imag_V_ce0 <= ap_const_logic_1;
        else 
            QAM16_LUT_M_imag_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    QAM16_LUT_M_imag_V_ce1_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter14)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1))) then 
            QAM16_LUT_M_imag_V_ce1 <= ap_const_logic_1;
        else 
            QAM16_LUT_M_imag_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    QAM16_LUT_M_imag_V_ce2_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter14)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1))) then 
            QAM16_LUT_M_imag_V_ce2 <= ap_const_logic_1;
        else 
            QAM16_LUT_M_imag_V_ce2 <= ap_const_logic_0;
        end if; 
    end process;


    QAM16_LUT_M_imag_V_ce3_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter14)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1))) then 
            QAM16_LUT_M_imag_V_ce3 <= ap_const_logic_1;
        else 
            QAM16_LUT_M_imag_V_ce3 <= ap_const_logic_0;
        end if; 
    end process;

    QAM16_LUT_M_real_V_address0 <= tmp_4_i_fu_1280_p1(4 - 1 downto 0);
    QAM16_LUT_M_real_V_address1 <= tmp_1_i_fu_1292_p1(4 - 1 downto 0);
    QAM16_LUT_M_real_V_address2 <= tmp_7_i_fu_1302_p1(4 - 1 downto 0);
    QAM16_LUT_M_real_V_address3 <= tmp_3_i_fu_1312_p1(4 - 1 downto 0);

    QAM16_LUT_M_real_V_ce0_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter14)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1))) then 
            QAM16_LUT_M_real_V_ce0 <= ap_const_logic_1;
        else 
            QAM16_LUT_M_real_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    QAM16_LUT_M_real_V_ce1_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter14)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1))) then 
            QAM16_LUT_M_real_V_ce1 <= ap_const_logic_1;
        else 
            QAM16_LUT_M_real_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    QAM16_LUT_M_real_V_ce2_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter14)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1))) then 
            QAM16_LUT_M_real_V_ce2 <= ap_const_logic_1;
        else 
            QAM16_LUT_M_real_V_ce2 <= ap_const_logic_0;
        end if; 
    end process;


    QAM16_LUT_M_real_V_ce3_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter14)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1))) then 
            QAM16_LUT_M_real_V_ce3 <= ap_const_logic_1;
        else 
            QAM16_LUT_M_real_V_ce3 <= ap_const_logic_0;
        end if; 
    end process;

    QAM64_LUT_M_imag_V_address0 <= tmp_5_i_fu_1286_p1(6 - 1 downto 0);
    QAM64_LUT_M_imag_V_address1 <= tmp_2_i_fu_1297_p1(6 - 1 downto 0);
    QAM64_LUT_M_imag_V_address2 <= tmp_8_i_fu_1307_p1(6 - 1 downto 0);
    QAM64_LUT_M_imag_V_address3 <= tmp_4_i1_fu_1317_p1(6 - 1 downto 0);

    QAM64_LUT_M_imag_V_ce0_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter14)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1))) then 
            QAM64_LUT_M_imag_V_ce0 <= ap_const_logic_1;
        else 
            QAM64_LUT_M_imag_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    QAM64_LUT_M_imag_V_ce1_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter14)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1))) then 
            QAM64_LUT_M_imag_V_ce1 <= ap_const_logic_1;
        else 
            QAM64_LUT_M_imag_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    QAM64_LUT_M_imag_V_ce2_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter14)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1))) then 
            QAM64_LUT_M_imag_V_ce2 <= ap_const_logic_1;
        else 
            QAM64_LUT_M_imag_V_ce2 <= ap_const_logic_0;
        end if; 
    end process;


    QAM64_LUT_M_imag_V_ce3_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter14)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1))) then 
            QAM64_LUT_M_imag_V_ce3 <= ap_const_logic_1;
        else 
            QAM64_LUT_M_imag_V_ce3 <= ap_const_logic_0;
        end if; 
    end process;

    QAM64_LUT_M_real_V_address0 <= tmp_5_i_fu_1286_p1(6 - 1 downto 0);
    QAM64_LUT_M_real_V_address1 <= tmp_2_i_fu_1297_p1(6 - 1 downto 0);
    QAM64_LUT_M_real_V_address2 <= tmp_8_i_fu_1307_p1(6 - 1 downto 0);
    QAM64_LUT_M_real_V_address3 <= tmp_4_i1_fu_1317_p1(6 - 1 downto 0);

    QAM64_LUT_M_real_V_ce0_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter14)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1))) then 
            QAM64_LUT_M_real_V_ce0 <= ap_const_logic_1;
        else 
            QAM64_LUT_M_real_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    QAM64_LUT_M_real_V_ce1_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter14)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1))) then 
            QAM64_LUT_M_real_V_ce1 <= ap_const_logic_1;
        else 
            QAM64_LUT_M_real_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    QAM64_LUT_M_real_V_ce2_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter14)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1))) then 
            QAM64_LUT_M_real_V_ce2 <= ap_const_logic_1;
        else 
            QAM64_LUT_M_real_V_ce2 <= ap_const_logic_0;
        end if; 
    end process;


    QAM64_LUT_M_real_V_ce3_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter14)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1))) then 
            QAM64_LUT_M_real_V_ce3 <= ap_const_logic_1;
        else 
            QAM64_LUT_M_real_V_ce3 <= ap_const_logic_0;
        end if; 
    end process;

    Range1_all_ones_fu_837_p2 <= "1" when (p_Result_4_reg_2101 = ap_const_lv2_3) else "0";
    Range1_all_zeros_fu_842_p2 <= "1" when (p_Result_4_reg_2101 = ap_const_lv2_0) else "0";
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(4);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state23 <= ap_CS_fsm(5);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(hard_data_V_V_0_vld_out, ap_enable_reg_pp0_iter1, ap_predicate_op130_read_state6)
    begin
                ap_block_pp0_stage0_01001 <= ((ap_predicate_op130_read_state6 = ap_const_boolean_1) and (hard_data_V_V_0_vld_out = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(hard_data_V_V_0_vld_out, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter16, ap_enable_reg_pp0_iter17, ap_predicate_op130_read_state6, ap_block_state21_io, ap_block_state22_io)
    begin
                ap_block_pp0_stage0_11001 <= (((ap_const_boolean_1 = ap_block_state22_io) and (ap_enable_reg_pp0_iter17 = ap_const_logic_1)) or ((ap_const_boolean_1 = ap_block_state21_io) and (ap_enable_reg_pp0_iter16 = ap_const_logic_1)) or ((ap_predicate_op130_read_state6 = ap_const_boolean_1) and (hard_data_V_V_0_vld_out = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(hard_data_V_V_0_vld_out, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter16, ap_enable_reg_pp0_iter17, ap_predicate_op130_read_state6, ap_block_state21_io, ap_block_state22_io)
    begin
                ap_block_pp0_stage0_subdone <= (((ap_const_boolean_1 = ap_block_state22_io) and (ap_enable_reg_pp0_iter17 = ap_const_logic_1)) or ((ap_const_boolean_1 = ap_block_state21_io) and (ap_enable_reg_pp0_iter16 = ap_const_logic_1)) or ((ap_predicate_op130_read_state6 = ap_const_boolean_1) and (hard_data_V_V_0_vld_out = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)));
    end process;

        ap_block_state10_pp0_stage0_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage0_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp0_stage0_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state13_pp0_stage0_iter8 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state14_pp0_stage0_iter9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state15_pp0_stage0_iter10 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state16_pp0_stage0_iter11 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state17_pp0_stage0_iter12 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state18_pp0_stage0_iter13 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state19_pp0_stage0_iter14 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state20_pp0_stage0_iter15 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state21_io_assign_proc : process(chan_data_1_V_1_ack_in, chan_data_2_V_1_ack_in, chan_data_3_V_1_ack_in, chan_data_4_V_1_ack_in, tmp_9_reg_2203_pp0_iter15_reg)
    begin
                ap_block_state21_io <= (((tmp_9_reg_2203_pp0_iter15_reg = ap_const_lv1_0) and (chan_data_4_V_1_ack_in = ap_const_logic_0)) or ((tmp_9_reg_2203_pp0_iter15_reg = ap_const_lv1_0) and (chan_data_3_V_1_ack_in = ap_const_logic_0)) or ((tmp_9_reg_2203_pp0_iter15_reg = ap_const_lv1_0) and (chan_data_2_V_1_ack_in = ap_const_logic_0)) or ((tmp_9_reg_2203_pp0_iter15_reg = ap_const_lv1_0) and (chan_data_1_V_1_ack_in = ap_const_logic_0)));
    end process;

        ap_block_state21_pp0_stage0_iter16 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state22_io_assign_proc : process(chan_data_1_V_1_ack_in, chan_data_2_V_1_ack_in, chan_data_3_V_1_ack_in, chan_data_4_V_1_ack_in, tmp_9_reg_2203_pp0_iter16_reg)
    begin
                ap_block_state22_io <= (((tmp_9_reg_2203_pp0_iter16_reg = ap_const_lv1_0) and (chan_data_4_V_1_ack_in = ap_const_logic_0)) or ((tmp_9_reg_2203_pp0_iter16_reg = ap_const_lv1_0) and (chan_data_3_V_1_ack_in = ap_const_logic_0)) or ((tmp_9_reg_2203_pp0_iter16_reg = ap_const_lv1_0) and (chan_data_2_V_1_ack_in = ap_const_logic_0)) or ((tmp_9_reg_2203_pp0_iter16_reg = ap_const_lv1_0) and (chan_data_1_V_1_ack_in = ap_const_logic_0)));
    end process;

        ap_block_state22_pp0_stage0_iter17 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state23_assign_proc : process(ctrl_out_V_1_ack_in, chan_data_1_V_1_ack_in, chan_data_2_V_1_ack_in, chan_data_3_V_1_ack_in, chan_data_4_V_1_ack_in)
    begin
                ap_block_state23 <= ((ctrl_out_V_1_ack_in = ap_const_logic_0) or (chan_data_4_V_1_ack_in = ap_const_logic_0) or (chan_data_3_V_1_ack_in = ap_const_logic_0) or (chan_data_2_V_1_ack_in = ap_const_logic_0) or (chan_data_1_V_1_ack_in = ap_const_logic_0));
    end process;

        ap_block_state5_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state6_pp0_stage0_iter1_assign_proc : process(hard_data_V_V_0_vld_out, ap_predicate_op130_read_state6)
    begin
                ap_block_state6_pp0_stage0_iter1 <= ((ap_predicate_op130_read_state6 = ap_const_boolean_1) and (hard_data_V_V_0_vld_out = ap_const_logic_0));
    end process;

        ap_block_state7_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_1129_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
                ap_condition_1129 <= ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0));
    end process;


    ap_condition_pp0_exit_iter0_state5_assign_proc : process(tmp_9_fu_968_p2)
    begin
        if ((tmp_9_fu_968_p2 = ap_const_lv1_1)) then 
            ap_condition_pp0_exit_iter0_state5 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state5 <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter16, ap_enable_reg_pp0_iter17, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter9, ap_enable_reg_pp0_iter10, ap_enable_reg_pp0_iter11, ap_enable_reg_pp0_iter12, ap_enable_reg_pp0_iter13, ap_enable_reg_pp0_iter14, ap_enable_reg_pp0_iter15)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0) and (ap_enable_reg_pp0_iter17 = ap_const_logic_0) and (ap_enable_reg_pp0_iter16 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter15 = ap_const_logic_0) and (ap_enable_reg_pp0_iter14 = ap_const_logic_0) and (ap_enable_reg_pp0_iter13 = ap_const_logic_0) and (ap_enable_reg_pp0_iter12 = ap_const_logic_0) and (ap_enable_reg_pp0_iter11 = ap_const_logic_0) and (ap_enable_reg_pp0_iter10 = ap_const_logic_0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_p_3_phi_fu_475_p4_assign_proc : process(ap_block_pp0_stage0, p_3_reg_471, tmp_9_reg_2203_pp0_iter2_reg, r_V_reg_2244, ap_enable_reg_pp0_iter3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (tmp_9_reg_2203_pp0_iter2_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            ap_phi_mux_p_3_phi_fu_475_p4 <= r_V_reg_2244;
        else 
            ap_phi_mux_p_3_phi_fu_475_p4 <= p_3_reg_471;
        end if; 
    end process;


    ap_phi_mux_p_Val2_5_phi_fu_495_p4_assign_proc : process(ap_block_pp0_stage0, tmp_9_reg_2203_pp0_iter1_reg, tmp_10_reg_2207_pp0_iter1_reg, ap_enable_reg_pp0_iter2, ap_phi_mux_p_3_phi_fu_475_p4, ap_phi_reg_pp0_iter2_p_Val2_5_reg_492)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (tmp_10_reg_2207_pp0_iter1_reg = ap_const_lv1_0) and (tmp_9_reg_2203_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            ap_phi_mux_p_Val2_5_phi_fu_495_p4 <= ap_phi_mux_p_3_phi_fu_475_p4;
        else 
            ap_phi_mux_p_Val2_5_phi_fu_495_p4 <= ap_phi_reg_pp0_iter2_p_Val2_5_reg_492;
        end if; 
    end process;

    ap_phi_reg_pp0_iter0_p_Val2_5_reg_492 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";

    ap_predicate_op130_read_state6_assign_proc : process(tmp_9_reg_2203, tmp_10_reg_2207)
    begin
                ap_predicate_op130_read_state6 <= ((tmp_10_reg_2207 = ap_const_lv1_1) and (tmp_9_reg_2203 = ap_const_lv1_0));
    end process;


    ap_rst_n_inv_assign_proc : process(ap_rst_n)
    begin
                ap_rst_n_inv <= not(ap_rst_n);
    end process;

    awgn_snr_V_fu_918_p3 <= 
        p_mux_fu_904_p3 when (brmerge_fu_898_p2(0) = '1') else 
        p_s_fu_911_p3;
    brmerge_fu_898_p2 <= (p_39_demorgan_i_not_fu_892_p2 or neg_src_not_fu_880_p2);
    brmerge_i_i_not_fu_886_p2 <= (p_39_demorgan_i_fu_870_p2 and neg_src_not_fu_880_p2);
    carry_fu_797_p2 <= (tmp_2_fu_791_p2 and tmp_13_fu_769_p3);
        cast1_fu_1947_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_2_1_fu_1939_p3),40));

        cast2_fu_1960_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_3_1_fu_1952_p3),40));

        cast3_fu_1973_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_4_1_fu_1965_p3),40));

        cast4_fu_1986_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_5_1_fu_1978_p3),40));

    chan_data_1_V_1_ack_in <= chan_data_1_V_1_state(1);
    chan_data_1_V_1_ack_out <= chan_data_1_V_TREADY;

    chan_data_1_V_1_data_out_assign_proc : process(chan_data_1_V_1_payload_A, chan_data_1_V_1_payload_B, chan_data_1_V_1_sel)
    begin
        if ((chan_data_1_V_1_sel = ap_const_logic_1)) then 
            chan_data_1_V_1_data_out <= chan_data_1_V_1_payload_B;
        else 
            chan_data_1_V_1_data_out <= chan_data_1_V_1_payload_A;
        end if; 
    end process;

    chan_data_1_V_1_load_A <= (not(chan_data_1_V_1_sel_wr) and chan_data_1_V_1_state_cmp_full);
    chan_data_1_V_1_load_B <= (chan_data_1_V_1_state_cmp_full and chan_data_1_V_1_sel_wr);
    chan_data_1_V_1_sel <= chan_data_1_V_1_sel_rd;
    chan_data_1_V_1_state_cmp_full <= '0' when (chan_data_1_V_1_state = ap_const_lv2_1) else '1';

    chan_data_1_V_1_vld_in_assign_proc : process(ap_enable_reg_pp0_iter16, tmp_9_reg_2203_pp0_iter15_reg, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_9_reg_2203_pp0_iter15_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter16 = ap_const_logic_1))) then 
            chan_data_1_V_1_vld_in <= ap_const_logic_1;
        else 
            chan_data_1_V_1_vld_in <= ap_const_logic_0;
        end if; 
    end process;

    chan_data_1_V_1_vld_out <= chan_data_1_V_1_state(0);
    chan_data_1_V_TDATA <= chan_data_1_V_1_data_out;

    chan_data_1_V_TDATA_blk_n_assign_proc : process(chan_data_1_V_1_state, ap_block_pp0_stage0, ap_enable_reg_pp0_iter16, tmp_9_reg_2203_pp0_iter15_reg, ap_enable_reg_pp0_iter17, tmp_9_reg_2203_pp0_iter16_reg)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0) and (tmp_9_reg_2203_pp0_iter16_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter17 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0) and (tmp_9_reg_2203_pp0_iter15_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter16 = ap_const_logic_1)))) then 
            chan_data_1_V_TDATA_blk_n <= chan_data_1_V_1_state(1);
        else 
            chan_data_1_V_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    chan_data_1_V_TVALID <= chan_data_1_V_1_state(0);
    chan_data_2_V_1_ack_in <= chan_data_2_V_1_state(1);
    chan_data_2_V_1_ack_out <= chan_data_2_V_TREADY;

    chan_data_2_V_1_data_out_assign_proc : process(chan_data_2_V_1_payload_A, chan_data_2_V_1_payload_B, chan_data_2_V_1_sel)
    begin
        if ((chan_data_2_V_1_sel = ap_const_logic_1)) then 
            chan_data_2_V_1_data_out <= chan_data_2_V_1_payload_B;
        else 
            chan_data_2_V_1_data_out <= chan_data_2_V_1_payload_A;
        end if; 
    end process;

    chan_data_2_V_1_load_A <= (not(chan_data_2_V_1_sel_wr) and chan_data_2_V_1_state_cmp_full);
    chan_data_2_V_1_load_B <= (chan_data_2_V_1_state_cmp_full and chan_data_2_V_1_sel_wr);
    chan_data_2_V_1_sel <= chan_data_2_V_1_sel_rd;
    chan_data_2_V_1_state_cmp_full <= '0' when (chan_data_2_V_1_state = ap_const_lv2_1) else '1';

    chan_data_2_V_1_vld_in_assign_proc : process(ap_enable_reg_pp0_iter16, tmp_9_reg_2203_pp0_iter15_reg, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_9_reg_2203_pp0_iter15_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter16 = ap_const_logic_1))) then 
            chan_data_2_V_1_vld_in <= ap_const_logic_1;
        else 
            chan_data_2_V_1_vld_in <= ap_const_logic_0;
        end if; 
    end process;

    chan_data_2_V_1_vld_out <= chan_data_2_V_1_state(0);
    chan_data_2_V_TDATA <= chan_data_2_V_1_data_out;

    chan_data_2_V_TDATA_blk_n_assign_proc : process(chan_data_2_V_1_state, ap_block_pp0_stage0, ap_enable_reg_pp0_iter16, tmp_9_reg_2203_pp0_iter15_reg, ap_enable_reg_pp0_iter17, tmp_9_reg_2203_pp0_iter16_reg)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0) and (tmp_9_reg_2203_pp0_iter16_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter17 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0) and (tmp_9_reg_2203_pp0_iter15_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter16 = ap_const_logic_1)))) then 
            chan_data_2_V_TDATA_blk_n <= chan_data_2_V_1_state(1);
        else 
            chan_data_2_V_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    chan_data_2_V_TVALID <= chan_data_2_V_1_state(0);
    chan_data_3_V_1_ack_in <= chan_data_3_V_1_state(1);
    chan_data_3_V_1_ack_out <= chan_data_3_V_TREADY;

    chan_data_3_V_1_data_out_assign_proc : process(chan_data_3_V_1_payload_A, chan_data_3_V_1_payload_B, chan_data_3_V_1_sel)
    begin
        if ((chan_data_3_V_1_sel = ap_const_logic_1)) then 
            chan_data_3_V_1_data_out <= chan_data_3_V_1_payload_B;
        else 
            chan_data_3_V_1_data_out <= chan_data_3_V_1_payload_A;
        end if; 
    end process;

    chan_data_3_V_1_load_A <= (not(chan_data_3_V_1_sel_wr) and chan_data_3_V_1_state_cmp_full);
    chan_data_3_V_1_load_B <= (chan_data_3_V_1_state_cmp_full and chan_data_3_V_1_sel_wr);
    chan_data_3_V_1_sel <= chan_data_3_V_1_sel_rd;
    chan_data_3_V_1_state_cmp_full <= '0' when (chan_data_3_V_1_state = ap_const_lv2_1) else '1';

    chan_data_3_V_1_vld_in_assign_proc : process(ap_enable_reg_pp0_iter16, tmp_9_reg_2203_pp0_iter15_reg, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_9_reg_2203_pp0_iter15_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter16 = ap_const_logic_1))) then 
            chan_data_3_V_1_vld_in <= ap_const_logic_1;
        else 
            chan_data_3_V_1_vld_in <= ap_const_logic_0;
        end if; 
    end process;

    chan_data_3_V_1_vld_out <= chan_data_3_V_1_state(0);
    chan_data_3_V_TDATA <= chan_data_3_V_1_data_out;

    chan_data_3_V_TDATA_blk_n_assign_proc : process(chan_data_3_V_1_state, ap_block_pp0_stage0, ap_enable_reg_pp0_iter16, tmp_9_reg_2203_pp0_iter15_reg, ap_enable_reg_pp0_iter17, tmp_9_reg_2203_pp0_iter16_reg)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0) and (tmp_9_reg_2203_pp0_iter16_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter17 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0) and (tmp_9_reg_2203_pp0_iter15_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter16 = ap_const_logic_1)))) then 
            chan_data_3_V_TDATA_blk_n <= chan_data_3_V_1_state(1);
        else 
            chan_data_3_V_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    chan_data_3_V_TVALID <= chan_data_3_V_1_state(0);
    chan_data_4_V_1_ack_in <= chan_data_4_V_1_state(1);
    chan_data_4_V_1_ack_out <= chan_data_4_V_TREADY;

    chan_data_4_V_1_data_out_assign_proc : process(chan_data_4_V_1_payload_A, chan_data_4_V_1_payload_B, chan_data_4_V_1_sel)
    begin
        if ((chan_data_4_V_1_sel = ap_const_logic_1)) then 
            chan_data_4_V_1_data_out <= chan_data_4_V_1_payload_B;
        else 
            chan_data_4_V_1_data_out <= chan_data_4_V_1_payload_A;
        end if; 
    end process;

    chan_data_4_V_1_load_A <= (not(chan_data_4_V_1_sel_wr) and chan_data_4_V_1_state_cmp_full);
    chan_data_4_V_1_load_B <= (chan_data_4_V_1_state_cmp_full and chan_data_4_V_1_sel_wr);
    chan_data_4_V_1_sel <= chan_data_4_V_1_sel_rd;
    chan_data_4_V_1_state_cmp_full <= '0' when (chan_data_4_V_1_state = ap_const_lv2_1) else '1';

    chan_data_4_V_1_vld_in_assign_proc : process(ap_enable_reg_pp0_iter16, tmp_9_reg_2203_pp0_iter15_reg, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_9_reg_2203_pp0_iter15_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter16 = ap_const_logic_1))) then 
            chan_data_4_V_1_vld_in <= ap_const_logic_1;
        else 
            chan_data_4_V_1_vld_in <= ap_const_logic_0;
        end if; 
    end process;

    chan_data_4_V_1_vld_out <= chan_data_4_V_1_state(0);
    chan_data_4_V_TDATA <= chan_data_4_V_1_data_out;

    chan_data_4_V_TDATA_blk_n_assign_proc : process(chan_data_4_V_1_state, ap_block_pp0_stage0, ap_enable_reg_pp0_iter16, tmp_9_reg_2203_pp0_iter15_reg, ap_enable_reg_pp0_iter17, tmp_9_reg_2203_pp0_iter16_reg)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0) and (tmp_9_reg_2203_pp0_iter16_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter17 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0) and (tmp_9_reg_2203_pp0_iter15_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter16 = ap_const_logic_1)))) then 
            chan_data_4_V_TDATA_blk_n <= chan_data_4_V_1_state(1);
        else 
            chan_data_4_V_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    chan_data_4_V_TVALID <= chan_data_4_V_1_state(0);
        channel_data_M_imag_11_fu_1530_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(QAM16_LUT_M_imag_V_q2),16));

        channel_data_M_imag_2_fu_1364_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(QAM16_LUT_M_imag_V_q0),16));

        channel_data_M_imag_3_fu_1613_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(QAM16_LUT_M_imag_V_q3),16));

        channel_data_M_imag_6_fu_1447_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(QAM16_LUT_M_imag_V_q1),16));

    channel_data_M_real_11_fu_1493_p3 <= 
        ap_const_lv16_D2BE when (tmp_22_reg_2265_pp0_iter14_reg(0) = '1') else 
        ap_const_lv16_2D41;
        channel_data_M_real_14_fu_1526_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(QAM16_LUT_M_real_V_q2),16));

    channel_data_M_real_16_fu_1576_p3 <= 
        ap_const_lv16_D2BE when (tmp_25_reg_2281_pp0_iter14_reg(0) = '1') else 
        ap_const_lv16_2D41;
        channel_data_M_real_2_fu_1609_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(QAM16_LUT_M_real_V_q3),16));

        channel_data_M_real_3_fu_1360_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(QAM16_LUT_M_real_V_q0),16));

    channel_data_M_real_6_fu_1410_p3 <= 
        ap_const_lv16_D2BE when (tmp_19_reg_2249_pp0_iter14_reg(0) = '1') else 
        ap_const_lv16_2D41;
        channel_data_M_real_8_fu_1443_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(QAM16_LUT_M_real_V_q1),16));

    channel_data_M_real_fu_1327_p3 <= 
        ap_const_lv16_D2BE when (tmp_16_reg_2297(0) = '1') else 
        ap_const_lv16_2D41;
    ctrl_in_V_0_ack_in <= ctrl_in_V_0_state(1);

    ctrl_in_V_0_ack_out_assign_proc : process(ctrl_in_V_0_vld_out, ctrl_out_V_1_ack_in, ap_CS_fsm_state2)
    begin
        if ((not(((ctrl_out_V_1_ack_in = ap_const_logic_0) or (ctrl_in_V_0_vld_out = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            ctrl_in_V_0_ack_out <= ap_const_logic_1;
        else 
            ctrl_in_V_0_ack_out <= ap_const_logic_0;
        end if; 
    end process;


    ctrl_in_V_0_data_out_assign_proc : process(ctrl_in_V_0_payload_A, ctrl_in_V_0_payload_B, ctrl_in_V_0_sel)
    begin
        if ((ctrl_in_V_0_sel = ap_const_logic_1)) then 
            ctrl_in_V_0_data_out <= ctrl_in_V_0_payload_B;
        else 
            ctrl_in_V_0_data_out <= ctrl_in_V_0_payload_A;
        end if; 
    end process;

    ctrl_in_V_0_load_A <= (not(ctrl_in_V_0_sel_wr) and ctrl_in_V_0_state_cmp_full);
    ctrl_in_V_0_load_B <= (ctrl_in_V_0_state_cmp_full and ctrl_in_V_0_sel_wr);
    ctrl_in_V_0_sel <= ctrl_in_V_0_sel_rd;
    ctrl_in_V_0_state_cmp_full <= '0' when (ctrl_in_V_0_state = ap_const_lv2_1) else '1';
    ctrl_in_V_0_vld_in <= ctrl_in_V_TVALID;
    ctrl_in_V_0_vld_out <= ctrl_in_V_0_state(0);

    ctrl_in_V_TDATA_blk_n_assign_proc : process(ctrl_in_V_0_state, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            ctrl_in_V_TDATA_blk_n <= ctrl_in_V_0_state(0);
        else 
            ctrl_in_V_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    ctrl_in_V_TREADY <= ctrl_in_V_0_state(1);
    ctrl_out_V_1_ack_in <= ctrl_out_V_1_state(1);
    ctrl_out_V_1_ack_out <= ctrl_out_V_TREADY;

    ctrl_out_V_1_data_out_assign_proc : process(ctrl_out_V_1_payload_A, ctrl_out_V_1_payload_B, ctrl_out_V_1_sel)
    begin
        if ((ctrl_out_V_1_sel = ap_const_logic_1)) then 
            ctrl_out_V_1_data_out <= ctrl_out_V_1_payload_B;
        else 
            ctrl_out_V_1_data_out <= ctrl_out_V_1_payload_A;
        end if; 
    end process;

    ctrl_out_V_1_load_A <= (not(ctrl_out_V_1_sel_wr) and ctrl_out_V_1_state_cmp_full);
    ctrl_out_V_1_load_B <= (ctrl_out_V_1_state_cmp_full and ctrl_out_V_1_sel_wr);
    ctrl_out_V_1_sel <= ctrl_out_V_1_sel_rd;
    ctrl_out_V_1_state_cmp_full <= '0' when (ctrl_out_V_1_state = ap_const_lv2_1) else '1';

    ctrl_out_V_1_vld_in_assign_proc : process(ctrl_in_V_0_vld_out, ctrl_out_V_1_ack_in, ap_CS_fsm_state2)
    begin
        if ((not(((ctrl_out_V_1_ack_in = ap_const_logic_0) or (ctrl_in_V_0_vld_out = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            ctrl_out_V_1_vld_in <= ap_const_logic_1;
        else 
            ctrl_out_V_1_vld_in <= ap_const_logic_0;
        end if; 
    end process;

    ctrl_out_V_1_vld_out <= ctrl_out_V_1_state(0);
    ctrl_out_V_TDATA <= ctrl_out_V_1_data_out;

    ctrl_out_V_TDATA_blk_n_assign_proc : process(ctrl_out_V_1_state, ap_CS_fsm_state2, ap_CS_fsm_state3)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            ctrl_out_V_TDATA_blk_n <= ctrl_out_V_1_state(1);
        else 
            ctrl_out_V_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    ctrl_out_V_TVALID <= ctrl_out_V_1_state(0);
    ctrl_snr_V_fu_633_p4 <= ctrl_in_V_0_data_out(21 downto 5);
    deleted_zeros_fu_847_p3 <= 
        Range1_all_ones_fu_837_p2 when (carry_reg_2095(0) = '1') else 
        Range1_all_zeros_fu_842_p2;
    err_sample_imag_1_V_1_fu_1841_p2 <= std_logic_vector(unsigned(p_Val2_7_fu_1687_p4) + unsigned(err_sample_imag_1_V_fu_1814_p1));
    err_sample_imag_1_V_3_fu_1890_p3 <= 
        err_sample_imag_1_V_fu_1814_p1 when (ctrl_skip_chan_V_reg_2032(0) = '1') else 
        err_sample_imag_1_V_1_fu_1841_p2;
        err_sample_imag_1_V_fu_1814_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_37_reg_2388),19));

    err_sample_imag_2_V_1_fu_1853_p2 <= std_logic_vector(unsigned(p_Val2_11_fu_1725_p4) + unsigned(err_sample_imag_2_V_fu_1820_p1));
    err_sample_imag_2_V_3_fu_1904_p3 <= 
        err_sample_imag_2_V_fu_1820_p1 when (ctrl_skip_chan_V_reg_2032(0) = '1') else 
        err_sample_imag_2_V_1_fu_1853_p2;
        err_sample_imag_2_V_fu_1820_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_22_reg_2398),19));

    err_sample_imag_3_V_1_fu_1865_p2 <= std_logic_vector(unsigned(p_Val2_15_fu_1763_p4) + unsigned(err_sample_imag_3_V_fu_1826_p1));
    err_sample_imag_3_V_3_fu_1918_p3 <= 
        err_sample_imag_3_V_fu_1826_p1 when (ctrl_skip_chan_V_reg_2032(0) = '1') else 
        err_sample_imag_3_V_1_fu_1865_p2;
        err_sample_imag_3_V_fu_1826_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_24_reg_2408),19));

    err_sample_imag_4_V_1_fu_1877_p2 <= std_logic_vector(unsigned(p_Val2_19_fu_1801_p4) + unsigned(err_sample_imag_4_V_fu_1832_p1));
    err_sample_imag_4_V_3_fu_1932_p3 <= 
        err_sample_imag_4_V_fu_1832_p1 when (ctrl_skip_chan_V_reg_2032(0) = '1') else 
        err_sample_imag_4_V_1_fu_1877_p2;
        err_sample_imag_4_V_fu_1832_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_26_reg_2418),19));

    err_sample_real_1_V_1_fu_1835_p2 <= std_logic_vector(unsigned(p_Val2_36_fu_1668_p4) + unsigned(err_sample_real_1_V_fu_1811_p1));
    err_sample_real_1_V_3_fu_1883_p3 <= 
        err_sample_real_1_V_fu_1811_p1 when (ctrl_skip_chan_V_reg_2032(0) = '1') else 
        err_sample_real_1_V_1_fu_1835_p2;
        err_sample_real_1_V_fu_1811_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_21_reg_2393),19));

    err_sample_real_2_V_1_fu_1847_p2 <= std_logic_vector(unsigned(p_Val2_9_fu_1706_p4) + unsigned(err_sample_real_2_V_fu_1817_p1));
    err_sample_real_2_V_3_fu_1897_p3 <= 
        err_sample_real_2_V_fu_1817_p1 when (ctrl_skip_chan_V_reg_2032(0) = '1') else 
        err_sample_real_2_V_1_fu_1847_p2;
        err_sample_real_2_V_fu_1817_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_23_reg_2403),19));

    err_sample_real_3_V_1_fu_1859_p2 <= std_logic_vector(unsigned(p_Val2_13_fu_1744_p4) + unsigned(err_sample_real_3_V_fu_1823_p1));
    err_sample_real_3_V_3_fu_1911_p3 <= 
        err_sample_real_3_V_fu_1823_p1 when (ctrl_skip_chan_V_reg_2032(0) = '1') else 
        err_sample_real_3_V_1_fu_1859_p2;
        err_sample_real_3_V_fu_1823_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_25_reg_2413),19));

    err_sample_real_4_V_1_fu_1871_p2 <= std_logic_vector(unsigned(p_Val2_17_fu_1782_p4) + unsigned(err_sample_real_4_V_fu_1829_p1));
    err_sample_real_4_V_3_fu_1925_p3 <= 
        err_sample_real_4_V_fu_1829_p1 when (ctrl_skip_chan_V_reg_2032(0) = '1') else 
        err_sample_real_4_V_1_fu_1871_p2;
        err_sample_real_4_V_fu_1829_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_27_reg_2423),19));


    grp_awgn_imag1_fu_515_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, tmp_9_reg_2203, tmp_9_reg_2203_pp0_iter15_reg, ap_block_pp0_stage0_11001, tmp_9_reg_2203_pp0_iter1_reg, tmp_9_reg_2203_pp0_iter2_reg, tmp_9_reg_2203_pp0_iter3_reg, tmp_9_reg_2203_pp0_iter4_reg, tmp_9_reg_2203_pp0_iter5_reg, tmp_9_reg_2203_pp0_iter6_reg, tmp_9_reg_2203_pp0_iter7_reg, tmp_9_reg_2203_pp0_iter8_reg, tmp_9_reg_2203_pp0_iter9_reg, tmp_9_reg_2203_pp0_iter10_reg, tmp_9_reg_2203_pp0_iter11_reg, tmp_9_reg_2203_pp0_iter12_reg, tmp_9_reg_2203_pp0_iter13_reg, tmp_9_reg_2203_pp0_iter14_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and ((tmp_9_reg_2203_pp0_iter14_reg = ap_const_lv1_0) or (tmp_9_reg_2203_pp0_iter13_reg = ap_const_lv1_0) or (tmp_9_reg_2203_pp0_iter12_reg = ap_const_lv1_0) or (tmp_9_reg_2203_pp0_iter11_reg = ap_const_lv1_0) or (tmp_9_reg_2203_pp0_iter10_reg = ap_const_lv1_0) or (tmp_9_reg_2203_pp0_iter9_reg = ap_const_lv1_0) or (tmp_9_reg_2203_pp0_iter8_reg = ap_const_lv1_0) or (tmp_9_reg_2203_pp0_iter7_reg = ap_const_lv1_0) or (tmp_9_reg_2203_pp0_iter6_reg = ap_const_lv1_0) or (tmp_9_reg_2203_pp0_iter5_reg = ap_const_lv1_0) or (tmp_9_reg_2203_pp0_iter4_reg = ap_const_lv1_0) or (tmp_9_reg_2203_pp0_iter3_reg = ap_const_lv1_0) or (tmp_9_reg_2203_pp0_iter2_reg = ap_const_lv1_0) or (tmp_9_reg_2203_pp0_iter1_reg = ap_const_lv1_0) or (tmp_9_reg_2203_pp0_iter15_reg = ap_const_lv1_0) or (tmp_9_reg_2203 = ap_const_lv1_0)))) then 
            grp_awgn_imag1_fu_515_ap_ce <= ap_const_logic_1;
        else 
            grp_awgn_imag1_fu_515_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_awgn_imag1_fu_515_ap_start <= grp_awgn_imag1_fu_515_ap_start_reg;

    grp_awgn_imag2_fu_541_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, tmp_9_reg_2203, tmp_9_reg_2203_pp0_iter15_reg, ap_block_pp0_stage0_11001, tmp_9_reg_2203_pp0_iter1_reg, tmp_9_reg_2203_pp0_iter2_reg, tmp_9_reg_2203_pp0_iter3_reg, tmp_9_reg_2203_pp0_iter4_reg, tmp_9_reg_2203_pp0_iter5_reg, tmp_9_reg_2203_pp0_iter6_reg, tmp_9_reg_2203_pp0_iter7_reg, tmp_9_reg_2203_pp0_iter8_reg, tmp_9_reg_2203_pp0_iter9_reg, tmp_9_reg_2203_pp0_iter10_reg, tmp_9_reg_2203_pp0_iter11_reg, tmp_9_reg_2203_pp0_iter12_reg, tmp_9_reg_2203_pp0_iter13_reg, tmp_9_reg_2203_pp0_iter14_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and ((tmp_9_reg_2203_pp0_iter14_reg = ap_const_lv1_0) or (tmp_9_reg_2203_pp0_iter13_reg = ap_const_lv1_0) or (tmp_9_reg_2203_pp0_iter12_reg = ap_const_lv1_0) or (tmp_9_reg_2203_pp0_iter11_reg = ap_const_lv1_0) or (tmp_9_reg_2203_pp0_iter10_reg = ap_const_lv1_0) or (tmp_9_reg_2203_pp0_iter9_reg = ap_const_lv1_0) or (tmp_9_reg_2203_pp0_iter8_reg = ap_const_lv1_0) or (tmp_9_reg_2203_pp0_iter7_reg = ap_const_lv1_0) or (tmp_9_reg_2203_pp0_iter6_reg = ap_const_lv1_0) or (tmp_9_reg_2203_pp0_iter5_reg = ap_const_lv1_0) or (tmp_9_reg_2203_pp0_iter4_reg = ap_const_lv1_0) or (tmp_9_reg_2203_pp0_iter3_reg = ap_const_lv1_0) or (tmp_9_reg_2203_pp0_iter2_reg = ap_const_lv1_0) or (tmp_9_reg_2203_pp0_iter1_reg = ap_const_lv1_0) or (tmp_9_reg_2203_pp0_iter15_reg = ap_const_lv1_0) or (tmp_9_reg_2203 = ap_const_lv1_0)))) then 
            grp_awgn_imag2_fu_541_ap_ce <= ap_const_logic_1;
        else 
            grp_awgn_imag2_fu_541_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_awgn_imag2_fu_541_ap_start <= grp_awgn_imag2_fu_541_ap_start_reg;

    grp_awgn_imag3_fu_567_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, tmp_9_reg_2203, tmp_9_reg_2203_pp0_iter15_reg, ap_block_pp0_stage0_11001, tmp_9_reg_2203_pp0_iter1_reg, tmp_9_reg_2203_pp0_iter2_reg, tmp_9_reg_2203_pp0_iter3_reg, tmp_9_reg_2203_pp0_iter4_reg, tmp_9_reg_2203_pp0_iter5_reg, tmp_9_reg_2203_pp0_iter6_reg, tmp_9_reg_2203_pp0_iter7_reg, tmp_9_reg_2203_pp0_iter8_reg, tmp_9_reg_2203_pp0_iter9_reg, tmp_9_reg_2203_pp0_iter10_reg, tmp_9_reg_2203_pp0_iter11_reg, tmp_9_reg_2203_pp0_iter12_reg, tmp_9_reg_2203_pp0_iter13_reg, tmp_9_reg_2203_pp0_iter14_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and ((tmp_9_reg_2203_pp0_iter14_reg = ap_const_lv1_0) or (tmp_9_reg_2203_pp0_iter13_reg = ap_const_lv1_0) or (tmp_9_reg_2203_pp0_iter12_reg = ap_const_lv1_0) or (tmp_9_reg_2203_pp0_iter11_reg = ap_const_lv1_0) or (tmp_9_reg_2203_pp0_iter10_reg = ap_const_lv1_0) or (tmp_9_reg_2203_pp0_iter9_reg = ap_const_lv1_0) or (tmp_9_reg_2203_pp0_iter8_reg = ap_const_lv1_0) or (tmp_9_reg_2203_pp0_iter7_reg = ap_const_lv1_0) or (tmp_9_reg_2203_pp0_iter6_reg = ap_const_lv1_0) or (tmp_9_reg_2203_pp0_iter5_reg = ap_const_lv1_0) or (tmp_9_reg_2203_pp0_iter4_reg = ap_const_lv1_0) or (tmp_9_reg_2203_pp0_iter3_reg = ap_const_lv1_0) or (tmp_9_reg_2203_pp0_iter2_reg = ap_const_lv1_0) or (tmp_9_reg_2203_pp0_iter1_reg = ap_const_lv1_0) or (tmp_9_reg_2203_pp0_iter15_reg = ap_const_lv1_0) or (tmp_9_reg_2203 = ap_const_lv1_0)))) then 
            grp_awgn_imag3_fu_567_ap_ce <= ap_const_logic_1;
        else 
            grp_awgn_imag3_fu_567_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_awgn_imag3_fu_567_ap_start <= grp_awgn_imag3_fu_567_ap_start_reg;

    grp_awgn_imag4_fu_593_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, tmp_9_reg_2203, tmp_9_reg_2203_pp0_iter15_reg, ap_block_pp0_stage0_11001, tmp_9_reg_2203_pp0_iter1_reg, tmp_9_reg_2203_pp0_iter2_reg, tmp_9_reg_2203_pp0_iter3_reg, tmp_9_reg_2203_pp0_iter4_reg, tmp_9_reg_2203_pp0_iter5_reg, tmp_9_reg_2203_pp0_iter6_reg, tmp_9_reg_2203_pp0_iter7_reg, tmp_9_reg_2203_pp0_iter8_reg, tmp_9_reg_2203_pp0_iter9_reg, tmp_9_reg_2203_pp0_iter10_reg, tmp_9_reg_2203_pp0_iter11_reg, tmp_9_reg_2203_pp0_iter12_reg, tmp_9_reg_2203_pp0_iter13_reg, tmp_9_reg_2203_pp0_iter14_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and ((tmp_9_reg_2203_pp0_iter14_reg = ap_const_lv1_0) or (tmp_9_reg_2203_pp0_iter13_reg = ap_const_lv1_0) or (tmp_9_reg_2203_pp0_iter12_reg = ap_const_lv1_0) or (tmp_9_reg_2203_pp0_iter11_reg = ap_const_lv1_0) or (tmp_9_reg_2203_pp0_iter10_reg = ap_const_lv1_0) or (tmp_9_reg_2203_pp0_iter9_reg = ap_const_lv1_0) or (tmp_9_reg_2203_pp0_iter8_reg = ap_const_lv1_0) or (tmp_9_reg_2203_pp0_iter7_reg = ap_const_lv1_0) or (tmp_9_reg_2203_pp0_iter6_reg = ap_const_lv1_0) or (tmp_9_reg_2203_pp0_iter5_reg = ap_const_lv1_0) or (tmp_9_reg_2203_pp0_iter4_reg = ap_const_lv1_0) or (tmp_9_reg_2203_pp0_iter3_reg = ap_const_lv1_0) or (tmp_9_reg_2203_pp0_iter2_reg = ap_const_lv1_0) or (tmp_9_reg_2203_pp0_iter1_reg = ap_const_lv1_0) or (tmp_9_reg_2203_pp0_iter15_reg = ap_const_lv1_0) or (tmp_9_reg_2203 = ap_const_lv1_0)))) then 
            grp_awgn_imag4_fu_593_ap_ce <= ap_const_logic_1;
        else 
            grp_awgn_imag4_fu_593_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_awgn_imag4_fu_593_ap_start <= grp_awgn_imag4_fu_593_ap_start_reg;

    grp_awgn_real1_fu_502_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, tmp_9_reg_2203, tmp_9_reg_2203_pp0_iter15_reg, ap_block_pp0_stage0_11001, tmp_9_reg_2203_pp0_iter1_reg, tmp_9_reg_2203_pp0_iter2_reg, tmp_9_reg_2203_pp0_iter3_reg, tmp_9_reg_2203_pp0_iter4_reg, tmp_9_reg_2203_pp0_iter5_reg, tmp_9_reg_2203_pp0_iter6_reg, tmp_9_reg_2203_pp0_iter7_reg, tmp_9_reg_2203_pp0_iter8_reg, tmp_9_reg_2203_pp0_iter9_reg, tmp_9_reg_2203_pp0_iter10_reg, tmp_9_reg_2203_pp0_iter11_reg, tmp_9_reg_2203_pp0_iter12_reg, tmp_9_reg_2203_pp0_iter13_reg, tmp_9_reg_2203_pp0_iter14_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and ((tmp_9_reg_2203_pp0_iter14_reg = ap_const_lv1_0) or (tmp_9_reg_2203_pp0_iter13_reg = ap_const_lv1_0) or (tmp_9_reg_2203_pp0_iter12_reg = ap_const_lv1_0) or (tmp_9_reg_2203_pp0_iter11_reg = ap_const_lv1_0) or (tmp_9_reg_2203_pp0_iter10_reg = ap_const_lv1_0) or (tmp_9_reg_2203_pp0_iter9_reg = ap_const_lv1_0) or (tmp_9_reg_2203_pp0_iter8_reg = ap_const_lv1_0) or (tmp_9_reg_2203_pp0_iter7_reg = ap_const_lv1_0) or (tmp_9_reg_2203_pp0_iter6_reg = ap_const_lv1_0) or (tmp_9_reg_2203_pp0_iter5_reg = ap_const_lv1_0) or (tmp_9_reg_2203_pp0_iter4_reg = ap_const_lv1_0) or (tmp_9_reg_2203_pp0_iter3_reg = ap_const_lv1_0) or (tmp_9_reg_2203_pp0_iter2_reg = ap_const_lv1_0) or (tmp_9_reg_2203_pp0_iter1_reg = ap_const_lv1_0) or (tmp_9_reg_2203_pp0_iter15_reg = ap_const_lv1_0) or (tmp_9_reg_2203 = ap_const_lv1_0)))) then 
            grp_awgn_real1_fu_502_ap_ce <= ap_const_logic_1;
        else 
            grp_awgn_real1_fu_502_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_awgn_real1_fu_502_ap_start <= grp_awgn_real1_fu_502_ap_start_reg;

    grp_awgn_real2_fu_528_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, tmp_9_reg_2203, tmp_9_reg_2203_pp0_iter15_reg, ap_block_pp0_stage0_11001, tmp_9_reg_2203_pp0_iter1_reg, tmp_9_reg_2203_pp0_iter2_reg, tmp_9_reg_2203_pp0_iter3_reg, tmp_9_reg_2203_pp0_iter4_reg, tmp_9_reg_2203_pp0_iter5_reg, tmp_9_reg_2203_pp0_iter6_reg, tmp_9_reg_2203_pp0_iter7_reg, tmp_9_reg_2203_pp0_iter8_reg, tmp_9_reg_2203_pp0_iter9_reg, tmp_9_reg_2203_pp0_iter10_reg, tmp_9_reg_2203_pp0_iter11_reg, tmp_9_reg_2203_pp0_iter12_reg, tmp_9_reg_2203_pp0_iter13_reg, tmp_9_reg_2203_pp0_iter14_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and ((tmp_9_reg_2203_pp0_iter14_reg = ap_const_lv1_0) or (tmp_9_reg_2203_pp0_iter13_reg = ap_const_lv1_0) or (tmp_9_reg_2203_pp0_iter12_reg = ap_const_lv1_0) or (tmp_9_reg_2203_pp0_iter11_reg = ap_const_lv1_0) or (tmp_9_reg_2203_pp0_iter10_reg = ap_const_lv1_0) or (tmp_9_reg_2203_pp0_iter9_reg = ap_const_lv1_0) or (tmp_9_reg_2203_pp0_iter8_reg = ap_const_lv1_0) or (tmp_9_reg_2203_pp0_iter7_reg = ap_const_lv1_0) or (tmp_9_reg_2203_pp0_iter6_reg = ap_const_lv1_0) or (tmp_9_reg_2203_pp0_iter5_reg = ap_const_lv1_0) or (tmp_9_reg_2203_pp0_iter4_reg = ap_const_lv1_0) or (tmp_9_reg_2203_pp0_iter3_reg = ap_const_lv1_0) or (tmp_9_reg_2203_pp0_iter2_reg = ap_const_lv1_0) or (tmp_9_reg_2203_pp0_iter1_reg = ap_const_lv1_0) or (tmp_9_reg_2203_pp0_iter15_reg = ap_const_lv1_0) or (tmp_9_reg_2203 = ap_const_lv1_0)))) then 
            grp_awgn_real2_fu_528_ap_ce <= ap_const_logic_1;
        else 
            grp_awgn_real2_fu_528_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_awgn_real2_fu_528_ap_start <= grp_awgn_real2_fu_528_ap_start_reg;

    grp_awgn_real3_fu_554_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, tmp_9_reg_2203, tmp_9_reg_2203_pp0_iter15_reg, ap_block_pp0_stage0_11001, tmp_9_reg_2203_pp0_iter1_reg, tmp_9_reg_2203_pp0_iter2_reg, tmp_9_reg_2203_pp0_iter3_reg, tmp_9_reg_2203_pp0_iter4_reg, tmp_9_reg_2203_pp0_iter5_reg, tmp_9_reg_2203_pp0_iter6_reg, tmp_9_reg_2203_pp0_iter7_reg, tmp_9_reg_2203_pp0_iter8_reg, tmp_9_reg_2203_pp0_iter9_reg, tmp_9_reg_2203_pp0_iter10_reg, tmp_9_reg_2203_pp0_iter11_reg, tmp_9_reg_2203_pp0_iter12_reg, tmp_9_reg_2203_pp0_iter13_reg, tmp_9_reg_2203_pp0_iter14_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and ((tmp_9_reg_2203_pp0_iter14_reg = ap_const_lv1_0) or (tmp_9_reg_2203_pp0_iter13_reg = ap_const_lv1_0) or (tmp_9_reg_2203_pp0_iter12_reg = ap_const_lv1_0) or (tmp_9_reg_2203_pp0_iter11_reg = ap_const_lv1_0) or (tmp_9_reg_2203_pp0_iter10_reg = ap_const_lv1_0) or (tmp_9_reg_2203_pp0_iter9_reg = ap_const_lv1_0) or (tmp_9_reg_2203_pp0_iter8_reg = ap_const_lv1_0) or (tmp_9_reg_2203_pp0_iter7_reg = ap_const_lv1_0) or (tmp_9_reg_2203_pp0_iter6_reg = ap_const_lv1_0) or (tmp_9_reg_2203_pp0_iter5_reg = ap_const_lv1_0) or (tmp_9_reg_2203_pp0_iter4_reg = ap_const_lv1_0) or (tmp_9_reg_2203_pp0_iter3_reg = ap_const_lv1_0) or (tmp_9_reg_2203_pp0_iter2_reg = ap_const_lv1_0) or (tmp_9_reg_2203_pp0_iter1_reg = ap_const_lv1_0) or (tmp_9_reg_2203_pp0_iter15_reg = ap_const_lv1_0) or (tmp_9_reg_2203 = ap_const_lv1_0)))) then 
            grp_awgn_real3_fu_554_ap_ce <= ap_const_logic_1;
        else 
            grp_awgn_real3_fu_554_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_awgn_real3_fu_554_ap_start <= grp_awgn_real3_fu_554_ap_start_reg;

    grp_awgn_real4_fu_580_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, tmp_9_reg_2203, tmp_9_reg_2203_pp0_iter15_reg, ap_block_pp0_stage0_11001, tmp_9_reg_2203_pp0_iter1_reg, tmp_9_reg_2203_pp0_iter2_reg, tmp_9_reg_2203_pp0_iter3_reg, tmp_9_reg_2203_pp0_iter4_reg, tmp_9_reg_2203_pp0_iter5_reg, tmp_9_reg_2203_pp0_iter6_reg, tmp_9_reg_2203_pp0_iter7_reg, tmp_9_reg_2203_pp0_iter8_reg, tmp_9_reg_2203_pp0_iter9_reg, tmp_9_reg_2203_pp0_iter10_reg, tmp_9_reg_2203_pp0_iter11_reg, tmp_9_reg_2203_pp0_iter12_reg, tmp_9_reg_2203_pp0_iter13_reg, tmp_9_reg_2203_pp0_iter14_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and ((tmp_9_reg_2203_pp0_iter14_reg = ap_const_lv1_0) or (tmp_9_reg_2203_pp0_iter13_reg = ap_const_lv1_0) or (tmp_9_reg_2203_pp0_iter12_reg = ap_const_lv1_0) or (tmp_9_reg_2203_pp0_iter11_reg = ap_const_lv1_0) or (tmp_9_reg_2203_pp0_iter10_reg = ap_const_lv1_0) or (tmp_9_reg_2203_pp0_iter9_reg = ap_const_lv1_0) or (tmp_9_reg_2203_pp0_iter8_reg = ap_const_lv1_0) or (tmp_9_reg_2203_pp0_iter7_reg = ap_const_lv1_0) or (tmp_9_reg_2203_pp0_iter6_reg = ap_const_lv1_0) or (tmp_9_reg_2203_pp0_iter5_reg = ap_const_lv1_0) or (tmp_9_reg_2203_pp0_iter4_reg = ap_const_lv1_0) or (tmp_9_reg_2203_pp0_iter3_reg = ap_const_lv1_0) or (tmp_9_reg_2203_pp0_iter2_reg = ap_const_lv1_0) or (tmp_9_reg_2203_pp0_iter1_reg = ap_const_lv1_0) or (tmp_9_reg_2203_pp0_iter15_reg = ap_const_lv1_0) or (tmp_9_reg_2203 = ap_const_lv1_0)))) then 
            grp_awgn_real4_fu_580_ap_ce <= ap_const_logic_1;
        else 
            grp_awgn_real4_fu_580_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_awgn_real4_fu_580_ap_start <= grp_awgn_real4_fu_580_ap_start_reg;
    hard_data_V_V_0_ack_in <= hard_data_V_V_0_state(1);

    hard_data_V_V_0_ack_out_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_predicate_op130_read_state6, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_predicate_op130_read_state6 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            hard_data_V_V_0_ack_out <= ap_const_logic_1;
        else 
            hard_data_V_V_0_ack_out <= ap_const_logic_0;
        end if; 
    end process;


    hard_data_V_V_0_data_out_assign_proc : process(hard_data_V_V_0_payload_A, hard_data_V_V_0_payload_B, hard_data_V_V_0_sel)
    begin
        if ((hard_data_V_V_0_sel = ap_const_logic_1)) then 
            hard_data_V_V_0_data_out <= hard_data_V_V_0_payload_B;
        else 
            hard_data_V_V_0_data_out <= hard_data_V_V_0_payload_A;
        end if; 
    end process;

    hard_data_V_V_0_load_A <= (hard_data_V_V_0_state_cmp_full and not(hard_data_V_V_0_sel_wr));
    hard_data_V_V_0_load_B <= (hard_data_V_V_0_state_cmp_full and hard_data_V_V_0_sel_wr);
    hard_data_V_V_0_sel <= hard_data_V_V_0_sel_rd;
    hard_data_V_V_0_state_cmp_full <= '0' when (hard_data_V_V_0_state = ap_const_lv2_1) else '1';
    hard_data_V_V_0_vld_in <= hard_data_V_V_TVALID;
    hard_data_V_V_0_vld_out <= hard_data_V_V_0_state(0);

    hard_data_V_V_TDATA_blk_n_assign_proc : process(hard_data_V_V_0_state, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, tmp_9_reg_2203, tmp_10_reg_2207)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (tmp_10_reg_2207 = ap_const_lv1_1) and (tmp_9_reg_2203 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            hard_data_V_V_TDATA_blk_n <= hard_data_V_V_0_state(0);
        else 
            hard_data_V_V_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    hard_data_V_V_TREADY <= hard_data_V_V_0_state(1);
    neg_src_fu_865_p2 <= (tmp_3_fu_859_p2 and signbit_reg_2082);
    neg_src_not_fu_880_p2 <= (signbit_not_fu_875_p2 or p_38_i_fu_854_p2);
    newSel143_cast_cast_fu_706_p3 <= 
        ap_const_lv17_1CFD5 when (tmp_8_reg_2059(0) = '1') else 
        ap_const_lv17_0;
    newSel_fu_699_p3 <= 
        ap_const_lv17_19FAB when (sel_tmp2_reg_2065(0) = '1') else 
        ap_const_lv17_16F81;
    or_cond_fu_690_p2 <= (tmp_6_fu_658_p2 or sel_tmp2_fu_684_p2);
    p_38_i_fu_854_p2 <= (carry_reg_2095 and Range1_all_ones_fu_837_p2);
    p_39_demorgan_i_fu_870_p2 <= (signbit_reg_2082 or deleted_zeros_fu_847_p3);
    p_39_demorgan_i_not_fu_892_p2 <= (p_39_demorgan_i_fu_870_p2 xor ap_const_lv1_1);
    p_8_cast_fu_696_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_8_reg_2059),2));
    p_Val2_10_fu_1720_p2 <= std_logic_vector(shift_left(unsigned(tmp_29_cast_fu_1716_p1),to_integer(unsigned('0' & sh_assign_cast_reg_2107(21-1 downto 0)))));
    p_Val2_11_fu_1725_p4 <= p_Val2_10_fu_1720_p2(20 downto 2);
    p_Val2_12_fu_1739_p2 <= std_logic_vector(shift_left(unsigned(tmp_32_cast_fu_1735_p1),to_integer(unsigned('0' & sh_assign_cast_reg_2107(21-1 downto 0)))));
    p_Val2_13_fu_1744_p4 <= p_Val2_12_fu_1739_p2(20 downto 2);
    p_Val2_14_fu_1758_p2 <= std_logic_vector(shift_left(unsigned(tmp_35_cast_fu_1754_p1),to_integer(unsigned('0' & sh_assign_cast_reg_2107(21-1 downto 0)))));
    p_Val2_15_fu_1763_p4 <= p_Val2_14_fu_1758_p2(20 downto 2);
    p_Val2_16_fu_1777_p2 <= std_logic_vector(shift_left(unsigned(tmp_38_cast_fu_1773_p1),to_integer(unsigned('0' & sh_assign_cast_reg_2107(21-1 downto 0)))));
    p_Val2_17_fu_1782_p4 <= p_Val2_16_fu_1777_p2(20 downto 2);
    p_Val2_18_fu_1796_p2 <= std_logic_vector(shift_left(unsigned(tmp_41_cast_fu_1792_p1),to_integer(unsigned('0' & sh_assign_cast_reg_2107(21-1 downto 0)))));
    p_Val2_19_fu_1801_p4 <= p_Val2_18_fu_1796_p2(20 downto 2);
    p_Val2_1_fu_713_p3 <= 
        newSel_fu_699_p3 when (or_cond_reg_2071(0) = '1') else 
        newSel143_cast_cast_fu_706_p3;
    p_Val2_21_fu_1403_p3 <= 
        channel_data_M_real_fu_1327_p3 when (sel_tmp9_reg_2187(0) = '1') else 
        sel_tmp13_fu_1396_p3;
    p_Val2_22_fu_1465_p3 <= 
        channel_data_M_real_6_fu_1410_p3 when (sel_tmp9_reg_2187(0) = '1') else 
        sel_tmp15_fu_1458_p3;
    p_Val2_23_fu_1486_p3 <= 
        channel_data_M_real_6_fu_1410_p3 when (sel_tmp9_reg_2187(0) = '1') else 
        sel_tmp17_fu_1479_p3;
    p_Val2_24_fu_1548_p3 <= 
        channel_data_M_real_11_fu_1493_p3 when (sel_tmp9_reg_2187(0) = '1') else 
        sel_tmp19_fu_1541_p3;
    p_Val2_25_fu_1569_p3 <= 
        channel_data_M_real_11_fu_1493_p3 when (sel_tmp9_reg_2187(0) = '1') else 
        sel_tmp21_fu_1562_p3;
    p_Val2_26_fu_1631_p3 <= 
        channel_data_M_real_16_fu_1576_p3 when (sel_tmp9_reg_2187(0) = '1') else 
        sel_tmp23_fu_1624_p3;
    p_Val2_27_fu_1652_p3 <= 
        channel_data_M_real_16_fu_1576_p3 when (sel_tmp9_reg_2187(0) = '1') else 
        sel_tmp25_fu_1645_p3;
    p_Val2_35_fu_1663_p2 <= std_logic_vector(shift_left(unsigned(tmp_cast_fu_1659_p1),to_integer(unsigned('0' & sh_assign_cast_reg_2107(21-1 downto 0)))));
    p_Val2_36_fu_1668_p4 <= p_Val2_35_fu_1663_p2(20 downto 2);
    p_Val2_37_fu_1382_p3 <= 
        channel_data_M_real_fu_1327_p3 when (sel_tmp9_reg_2187(0) = '1') else 
        sel_tmp11_fu_1375_p3;
    p_Val2_38_fu_1178_p3 <= 
        symbol_4_V_fu_1041_p4 when (sel_tmp9_reg_2187(0) = '1') else 
        sel_tmp8_fu_1171_p3;
    p_Val2_3_fu_747_p4 <= snr_mod_V_fu_734_p2(14 downto 7);
    p_Val2_4_fu_777_p2 <= std_logic_vector(unsigned(tmp_s_fu_765_p1) + unsigned(p_Val2_3_fu_747_p4));
    p_Val2_6_fu_1682_p2 <= std_logic_vector(shift_left(unsigned(tmp_23_cast_fu_1678_p1),to_integer(unsigned('0' & sh_assign_cast_reg_2107(21-1 downto 0)))));
    p_Val2_7_fu_1687_p4 <= p_Val2_6_fu_1682_p2(20 downto 2);
    p_Val2_8_fu_1701_p2 <= std_logic_vector(shift_left(unsigned(tmp_26_cast_fu_1697_p1),to_integer(unsigned('0' & sh_assign_cast_reg_2107(21-1 downto 0)))));
    p_Val2_9_fu_1706_p4 <= p_Val2_8_fu_1701_p2(20 downto 2);
    p_mux_fu_904_p3 <= 
        p_Val2_4_reg_2089 when (brmerge_i_i_not_fu_886_p2(0) = '1') else 
        ap_const_lv8_FF;
    p_s_fu_911_p3 <= 
        ap_const_lv8_0 when (neg_src_fu_865_p2(0) = '1') else 
        p_Val2_4_reg_2089;
    r_V_fu_1185_p2 <= std_logic_vector(shift_right(unsigned(ap_phi_mux_p_Val2_5_phi_fu_495_p4),to_integer(unsigned('0' & tmp_5_reg_2137(31-1 downto 0)))));
    remaining_bits_1_fu_992_p2 <= std_logic_vector(unsigned(tmp_20_cast_reg_2142) + unsigned(remaining_bits_fu_240));
    remaining_bits_2_fu_982_p2 <= std_logic_vector(unsigned(remaining_bits_fu_240) - unsigned(tmp_13_cast_reg_2131));
    sel_tmp10_fu_1368_p3 <= 
        channel_data_M_imag_2_fu_1364_p1 when (sel_tmp5_reg_2155(0) = '1') else 
        QAM64_LUT_M_imag_V_q0;
    sel_tmp11_fu_1375_p3 <= 
        channel_data_M_imag_fu_1347_p6 when (sel_tmp7_reg_2171(0) = '1') else 
        sel_tmp10_fu_1368_p3;
    sel_tmp12_fu_1389_p3 <= 
        channel_data_M_real_3_fu_1360_p1 when (sel_tmp5_reg_2155(0) = '1') else 
        QAM64_LUT_M_real_V_q0;
    sel_tmp13_fu_1396_p3 <= 
        channel_data_M_real_1_fu_1334_p6 when (sel_tmp7_reg_2171(0) = '1') else 
        sel_tmp12_fu_1389_p3;
    sel_tmp14_fu_1451_p3 <= 
        channel_data_M_imag_6_fu_1447_p1 when (sel_tmp5_reg_2155(0) = '1') else 
        QAM64_LUT_M_imag_V_q1;
    sel_tmp15_fu_1458_p3 <= 
        channel_data_M_imag_5_fu_1430_p6 when (sel_tmp7_reg_2171(0) = '1') else 
        sel_tmp14_fu_1451_p3;
    sel_tmp16_fu_1472_p3 <= 
        channel_data_M_real_8_fu_1443_p1 when (sel_tmp5_reg_2155(0) = '1') else 
        QAM64_LUT_M_real_V_q1;
    sel_tmp17_fu_1479_p3 <= 
        channel_data_M_real_7_fu_1417_p6 when (sel_tmp7_reg_2171(0) = '1') else 
        sel_tmp16_fu_1472_p3;
    sel_tmp18_fu_1534_p3 <= 
        channel_data_M_imag_11_fu_1530_p1 when (sel_tmp5_reg_2155(0) = '1') else 
        QAM64_LUT_M_imag_V_q2;
    sel_tmp19_fu_1541_p3 <= 
        channel_data_M_imag_9_fu_1513_p6 when (sel_tmp7_reg_2171(0) = '1') else 
        sel_tmp18_fu_1534_p3;
    sel_tmp1_fu_678_p2 <= (tmp_6_fu_658_p2 xor ap_const_lv1_1);
    sel_tmp20_fu_1555_p3 <= 
        channel_data_M_real_14_fu_1526_p1 when (sel_tmp5_reg_2155(0) = '1') else 
        QAM64_LUT_M_real_V_q2;
    sel_tmp21_fu_1562_p3 <= 
        channel_data_M_real_12_fu_1500_p6 when (sel_tmp7_reg_2171(0) = '1') else 
        sel_tmp20_fu_1555_p3;
    sel_tmp22_fu_1617_p3 <= 
        channel_data_M_imag_3_fu_1613_p1 when (sel_tmp5_reg_2155(0) = '1') else 
        QAM64_LUT_M_imag_V_q3;
    sel_tmp23_fu_1624_p3 <= 
        channel_data_M_imag_13_fu_1596_p6 when (sel_tmp7_reg_2171(0) = '1') else 
        sel_tmp22_fu_1617_p3;
    sel_tmp24_fu_1638_p3 <= 
        channel_data_M_real_2_fu_1609_p1 when (sel_tmp5_reg_2155(0) = '1') else 
        QAM64_LUT_M_real_V_q3;
    sel_tmp25_fu_1645_p3 <= 
        channel_data_M_real_17_fu_1583_p6 when (sel_tmp7_reg_2171(0) = '1') else 
        sel_tmp24_fu_1638_p3;
    sel_tmp2_fu_684_p2 <= (tmp_fu_664_p3 and sel_tmp1_fu_678_p2);
    sel_tmp3_fu_720_p3 <= 
        ap_const_lv2_2 when (sel_tmp2_reg_2065(0) = '1') else 
        ap_const_lv2_3;
    sel_tmp4_fu_1157_p3 <= 
        symbol_4_V_2_fu_1091_p4 when (sel_tmp_reg_2147(0) = '1') else 
        p_Result_s_fu_224;
    sel_tmp5_fu_953_p2 <= "1" when (ctrl_mod_type_V_reg_2023 = ap_const_lv3_2) else "0";
    sel_tmp6_fu_1164_p3 <= 
        ap_const_lv6_0 when (sel_tmp5_reg_2155(0) = '1') else 
        sel_tmp4_fu_1157_p3;
    sel_tmp7_fu_958_p2 <= "1" when (ctrl_mod_type_V_reg_2023 = ap_const_lv3_1) else "0";
    sel_tmp8_fu_1171_p3 <= 
        symbol_4_V_3_fu_1061_p4 when (sel_tmp7_reg_2171(0) = '1') else 
        sel_tmp6_fu_1164_p3;
    sel_tmp9_fu_963_p2 <= "1" when (ctrl_mod_type_V_reg_2023 = ap_const_lv3_0) else "0";
    sel_tmp_fu_948_p2 <= "1" when (ctrl_mod_type_V_reg_2023 = ap_const_lv3_3) else "0";
    sh_assign_cast_fu_834_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sh_assign_reg_2077),21));
    sh_assign_fu_727_p3 <= 
        sel_tmp3_fu_720_p3 when (or_cond_reg_2071(0) = '1') else 
        p_8_cast_fu_696_p1;
    signbit_not_fu_875_p2 <= (signbit_reg_2082 xor ap_const_lv1_1);
    snr_mod_V_fu_734_p2 <= std_logic_vector(unsigned(ctrl_snr_V_reg_2044) - unsigned(p_Val2_1_fu_713_p3));
    symbol_1_V_1_fu_1244_p3 <= 
        symbol_1_V_reg_2221_pp0_iter13_reg when (sel_tmp_reg_2147(0) = '1') else 
        p_Result_3_fu_236;
    symbol_1_V_2_fu_1250_p3 <= 
        symbol_1_V_reg_2221_pp0_iter13_reg when (sel_tmp5_reg_2155(0) = '1') else 
        symbol_1_V_1_fu_1244_p3;
    symbol_1_V_3_fu_1256_p3 <= 
        symbol_1_V_reg_2221_pp0_iter13_reg when (sel_tmp7_reg_2171(0) = '1') else 
        symbol_1_V_2_fu_1250_p3;
    symbol_1_V_5_fu_1262_p3 <= 
        symbol_1_V_reg_2221_pp0_iter13_reg when (sel_tmp9_reg_2187(0) = '1') else 
        symbol_1_V_3_fu_1256_p3;
    symbol_1_V_fu_1017_p1 <= ap_phi_mux_p_Val2_5_phi_fu_495_p4(6 - 1 downto 0);
    symbol_2_V_4_fu_1101_p3 <= 
        symbol_4_V_3_fu_1061_p4 when (sel_tmp_reg_2147(0) = '1') else 
        p_Result_2_fu_232;
    symbol_2_V_5_fu_1108_p3 <= 
        symbol_3_V_9_fu_1051_p4 when (sel_tmp5_reg_2155(0) = '1') else 
        symbol_2_V_4_fu_1101_p3;
    symbol_2_V_6_fu_1115_p3 <= 
        symbol_3_V_8_fu_1031_p4 when (sel_tmp7_reg_2171(0) = '1') else 
        symbol_2_V_5_fu_1108_p3;
    symbol_2_V_8_fu_1122_p3 <= 
        symbol_2_V_fu_1021_p4 when (sel_tmp9_reg_2187(0) = '1') else 
        symbol_2_V_6_fu_1115_p3;
    symbol_2_V_fu_1021_p4 <= ap_phi_mux_p_Val2_5_phi_fu_495_p4(6 downto 1);
    symbol_3_V_10_fu_1150_p3 <= 
        symbol_3_V_8_fu_1031_p4 when (sel_tmp9_reg_2187(0) = '1') else 
        symbol_3_V_4_fu_1143_p3;
    symbol_3_V_1_fu_1081_p4 <= ap_phi_mux_p_Val2_5_phi_fu_495_p4(17 downto 12);
    symbol_3_V_2_fu_1129_p3 <= 
        symbol_3_V_1_fu_1081_p4 when (sel_tmp_reg_2147(0) = '1') else 
        p_Result_1_fu_228;
    symbol_3_V_3_fu_1136_p3 <= 
        symbol_3_V_fu_1071_p4 when (sel_tmp5_reg_2155(0) = '1') else 
        symbol_3_V_2_fu_1129_p3;
    symbol_3_V_4_fu_1143_p3 <= 
        symbol_3_V_9_fu_1051_p4 when (sel_tmp7_reg_2171(0) = '1') else 
        symbol_3_V_3_fu_1136_p3;
    symbol_3_V_8_fu_1031_p4 <= ap_phi_mux_p_Val2_5_phi_fu_495_p4(7 downto 2);
    symbol_3_V_9_fu_1051_p4 <= ap_phi_mux_p_Val2_5_phi_fu_495_p4(9 downto 4);
    symbol_3_V_fu_1071_p4 <= ap_phi_mux_p_Val2_5_phi_fu_495_p4(13 downto 8);
    symbol_4_V_2_fu_1091_p4 <= ap_phi_mux_p_Val2_5_phi_fu_495_p4(23 downto 18);
    symbol_4_V_3_fu_1061_p4 <= ap_phi_mux_p_Val2_5_phi_fu_495_p4(11 downto 6);
    symbol_4_V_fu_1041_p4 <= ap_phi_mux_p_Val2_5_phi_fu_495_p4(8 downto 3);
    symbols_V_1_fu_1002_p2 <= std_logic_vector(signed(ap_const_lv14_3FFF) + signed(symbols_reg_483));
    tmp_10_fu_977_p2 <= "1" when (signed(remaining_bits_fu_240) < signed(tmp_13_cast_reg_2131)) else "0";
    tmp_12_fu_757_p3 <= snr_mod_V_fu_734_p2(6 downto 6);
    tmp_13_cast_fu_926_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_2_fu_813_p10),8));
    tmp_13_fu_769_p3 <= snr_mod_V_fu_734_p2(14 downto 14);
    tmp_14_cast_fu_930_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_2_fu_813_p10),7));
    tmp_14_fu_783_p3 <= p_Val2_4_fu_777_p2(7 downto 7);
    tmp_16_fu_1268_p1 <= symbol_1_V_5_fu_1262_p3(1 - 1 downto 0);
    tmp_17_fu_1272_p1 <= symbol_1_V_5_fu_1262_p3(2 - 1 downto 0);
    tmp_18_fu_1276_p1 <= symbol_1_V_5_fu_1262_p3(4 - 1 downto 0);
    tmp_19_fu_1190_p1 <= symbol_2_V_8_fu_1122_p3(1 - 1 downto 0);
        tmp_1_cast_fu_653_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_1_fu_611_p1),64));

    tmp_1_fu_611_p1 <= ctrl_in_V_0_data_out(58 - 1 downto 0);
    tmp_1_i_fu_1292_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_21_reg_2260_pp0_iter13_reg),64));
    tmp_20_cast_fu_944_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_4_fu_938_p2),8));
    tmp_20_fu_1194_p1 <= symbol_2_V_8_fu_1122_p3(2 - 1 downto 0);
    tmp_21_fu_1198_p1 <= symbol_2_V_8_fu_1122_p3(4 - 1 downto 0);
    tmp_22_fu_1202_p1 <= symbol_3_V_10_fu_1150_p3(1 - 1 downto 0);
        tmp_23_cast_fu_1678_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(grp_awgn_imag1_fu_515_ap_return),21));

    tmp_23_fu_1206_p1 <= symbol_3_V_10_fu_1150_p3(2 - 1 downto 0);
    tmp_24_fu_1210_p1 <= symbol_3_V_10_fu_1150_p3(4 - 1 downto 0);
    tmp_25_fu_1214_p1 <= p_Val2_38_fu_1178_p3(1 - 1 downto 0);
        tmp_26_cast_fu_1697_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(grp_awgn_real2_fu_528_ap_return),21));

    tmp_26_fu_1218_p1 <= p_Val2_38_fu_1178_p3(2 - 1 downto 0);
    tmp_27_fu_1222_p1 <= p_Val2_38_fu_1178_p3(4 - 1 downto 0);
        tmp_29_cast_fu_1716_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(grp_awgn_imag2_fu_541_ap_return),21));

    tmp_2_1_fu_1939_p3 <= (err_sample_imag_1_V_3_fu_1890_p3 & err_sample_real_1_V_3_fu_1883_p3);
    tmp_2_fu_791_p2 <= (tmp_14_fu_783_p3 xor ap_const_lv1_1);
    tmp_2_i_fu_1297_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(symbol_2_V_8_reg_2229_pp0_iter13_reg),64));
        tmp_32_cast_fu_1735_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(grp_awgn_real3_fu_554_ap_return),21));

        tmp_35_cast_fu_1754_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(grp_awgn_imag3_fu_567_ap_return),21));

        tmp_38_cast_fu_1773_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(grp_awgn_real4_fu_580_ap_return),21));

    tmp_3_1_fu_1952_p3 <= (err_sample_imag_2_V_3_fu_1904_p3 & err_sample_real_2_V_3_fu_1897_p3);
    tmp_3_fu_859_p2 <= (p_38_i_fu_854_p2 xor ap_const_lv1_1);
    tmp_3_i_fu_1312_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_27_reg_2292_pp0_iter13_reg),64));
        tmp_41_cast_fu_1792_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(grp_awgn_imag4_fu_593_ap_return),21));

    tmp_4_1_fu_1965_p3 <= (err_sample_imag_3_V_3_fu_1918_p3 & err_sample_real_3_V_3_fu_1911_p3);
    tmp_4_fu_938_p2 <= std_logic_vector(signed(ap_const_lv7_60) - signed(tmp_14_cast_fu_930_p1));
    tmp_4_i1_fu_1317_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Val2_38_reg_2239_pp0_iter13_reg),64));
    tmp_4_i_fu_1280_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_18_fu_1276_p1),64));
    tmp_5_1_fu_1978_p3 <= (err_sample_imag_4_V_3_fu_1932_p3 & err_sample_real_4_V_3_fu_1925_p3);
    tmp_5_fu_934_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_2_fu_813_p10),96));
    tmp_5_i_fu_1286_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(symbol_1_V_5_fu_1262_p3),64));
    tmp_6_fu_658_p2 <= "1" when (signed(ctrl_snr_V_fu_633_p4) < signed(ap_const_lv17_1CFD5)) else "0";
    tmp_7_i_fu_1302_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_24_reg_2276_pp0_iter13_reg),64));
    tmp_8_fu_672_p2 <= "1" when (signed(ctrl_snr_V_fu_633_p4) < signed(ap_const_lv17_302B)) else "0";
    tmp_8_i_fu_1307_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(symbol_3_V_10_reg_2234_pp0_iter13_reg),64));
    tmp_9_fu_968_p2 <= "1" when (symbols_reg_483 = ap_const_lv14_0) else "0";
        tmp_cast_fu_1659_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(grp_awgn_real1_fu_502_ap_return),21));

    tmp_fu_664_p3 <= ctrl_in_V_0_data_out(21 downto 21);
    tmp_s_fu_765_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_12_fu_757_p3),8));
end behav;
