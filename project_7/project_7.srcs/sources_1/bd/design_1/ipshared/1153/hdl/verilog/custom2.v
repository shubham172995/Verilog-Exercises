// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="custom2,hls_ip_2018_3,{HLS_INPUT_TYPE=sc,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xczu9eg-ffvb1156-2-e,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=0.797000,HLS_SYN_LAT=3,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=20,HLS_SYN_LUT=42,HLS_VERSION=2018_3}" *)

module custom2 (
        clock1,
        clock2,
        reset,
        enable,
        out_counter1,
        out_counter2
);


input   clock1;
input   clock2;
input   reset;
input   enable;
output  [3:0] out_counter1;
output  [3:0] out_counter2;

wire   [3:0] grp_first_counter_fu_70_out_counter;
wire   [3:0] grp_first_counter_fu_86_out_counter;
wire   [1:0] ap_CS_fsm;
wire    ap_CS_fsm_state2;

first_counter grp_first_counter_fu_70(
    .enable(enable),
    .out_counter(grp_first_counter_fu_70_out_counter),
    .clock(clock1),
    .reset(reset)
);

first_counter grp_first_counter_fu_86(
    .enable(enable),
    .out_counter(grp_first_counter_fu_86_out_counter),
    .clock(clock2),
    .reset(reset)
);

assign ap_CS_fsm = 2'd0;

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign out_counter1 = grp_first_counter_fu_70_out_counter;

assign out_counter2 = grp_first_counter_fu_86_out_counter;

endmodule //custom2
